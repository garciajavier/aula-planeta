{"version":3,"sources":["./src/app/core/pwa/pwa.service.ts","./src/app/core/animations/route.animations.ts","./src/app/core/directives/permission/permission.directive.ts","./src/app/core/directives/directives.module.ts","./src/app/core/auth/auth-data.service.ts","./src/app/core/directives/uppercase/uppercase.directive.ts","./src/app/core/pwa/components/prompt/prompt-component.ts","./src/app/core/pwa/components/prompt/prompt-component.html","./src/app/core/http-interceptors/jwt.interceptor.ts","./src/environments/environment.ts","./src/app/core/error-handler/app-error-handler.service.ts","./src/app/core/notifications/notification.service.ts","./src/app/shared/models/settings.model.ts","./src/app/core/local-storage/local-storage.service.ts","./src/app/core/http-interceptors/loading.interceptor.ts","./src/app/core/settings/settings.service.ts","./src/app/core/progress-spinner/progress-spinner.component.ts","./src/app/core/progress-spinner/progress-spinner.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/title/title.service.ts","./src/app/app.module.ts","./src/app/services/data/pipes/settings.pipe.ts","./src/app/core/directives/numbers-only/numbers-only.directive.ts","./src/app/core/animations/animations.service.ts","./src/assets/logo_PLANETA72x72.png","./src/app/core/auth/auth-guard.service.ts","./src/app/material/material.module.ts","./src/app/core/progress-spinner/progress-spinner.service.ts","./src/app/core/auth/auth-management.service.ts","./src/app/core/network-connection/network-connection.service.ts","./src/app/core/core.module.ts","./src/app/features/main/main.component.ts","./src/app/features/main/main.component.html","./src/app/app-routing.module.ts","./src/app/core/http-interceptors/http-error.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Platform } from '@angular/cdk/platform';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { SwUpdate } from '@angular/service-worker';\nimport { Subject, timer } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { PromptComponent } from './components/prompt/prompt-component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PwaService implements OnDestroy {\n  private promptEvent: any;\n  /**\n   * Use to destroy and prevent memory leaks\n   */\n  private destroy$: Subject<void> = new Subject<void>();\n\n  constructor(\n    private bottomSheet: MatBottomSheet,\n    private platform: Platform,\n    private swUpdate: SwUpdate,\n    private translateService: TranslateService\n  ) {}\n\n  public initPwaPrompt() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate.available.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n        if (confirm(this.translateService.instant('aula-planeta.pwa.new-version'))) {\n          window.location.reload();\n        }\n      });\n    }\n\n    if (this.platform.ANDROID) {\n      window.addEventListener('beforeinstallprompt', (event: any) => {\n        event.preventDefault();\n        this.promptEvent = event;\n        this.openPromptComponent('android');\n      });\n    }\n    if (this.platform.IOS) {\n      const isInStandaloneMode = 'standalone' in window.navigator && window.navigator['standalone'];\n      if (!isInStandaloneMode) {\n        this.openPromptComponent('ios');\n      }\n    }\n  }\n\n  private openPromptComponent(mobileType: 'ios' | 'android') {\n    timer(3000)\n      .pipe(take(1))\n      .subscribe(() => this.bottomSheet.open(PromptComponent, { data: { mobileType, promptEvent: this.promptEvent } }));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import {\r\n  animate,\r\n  query,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  stagger,\r\n  sequence\r\n} from '@angular/animations';\r\nimport { AnimationsService } from './animations.service';\r\n\r\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\r\n\r\nconst STEPS_ALL: any[] = [\r\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\r\n    optional: true\r\n  }),\r\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\r\n    optional: true\r\n  }),\r\n  sequence([\r\n    query(\r\n      ':leave > *',\r\n      [\r\n        style({ transform: 'translateY(0%)', opacity: 1 }),\r\n        animate(\r\n          '0.2s ease-in-out',\r\n          style({ transform: 'translateY(-3%)', opacity: 0 })\r\n        ),\r\n        style({ position: 'fixed' })\r\n      ],\r\n      { optional: true }\r\n    ),\r\n    query(\r\n      ':enter > *',\r\n      [\r\n        style({\r\n          transform: 'translateY(-3%)',\r\n          opacity: 0,\r\n          position: 'static'\r\n        }),\r\n        animate(\r\n          '0.5s ease-in-out',\r\n          style({ transform: 'translateY(0%)', opacity: 1 })\r\n        )\r\n      ],\r\n      { optional: true }\r\n    )\r\n  ]),\r\n  query(\r\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\r\n    stagger(75, [\r\n      style({ transform: 'translateY(10%)', opacity: 0 }),\r\n      animate(\r\n        '0.5s ease-in-out',\r\n        style({ transform: 'translateY(0%)', opacity: 1 })\r\n      )\r\n    ]),\r\n    { optional: true }\r\n  )\r\n];\r\nconst STEPS_NONE = [];\r\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\r\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\r\n\r\nexport const routeAnimations = trigger('routeAnimations', [\r\n  transition(isRouteAnimationsAll, STEPS_ALL),\r\n  transition(isRouteAnimationsNone, STEPS_NONE),\r\n  transition(isRouteAnimationsPage, STEPS_PAGE),\r\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\r\n]);\r\n\r\nexport function isRouteAnimationsAll() {\r\n  return AnimationsService.isRouteAnimationsType('ALL');\r\n}\r\n\r\nexport function isRouteAnimationsNone() {\r\n  return AnimationsService.isRouteAnimationsType('NONE');\r\n}\r\n\r\nexport function isRouteAnimationsPage() {\r\n  return AnimationsService.isRouteAnimationsType('PAGE');\r\n}\r\n\r\nexport function isRouteAnimationsElements() {\r\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef, Input, OnInit } from '@angular/core';\r\nimport { AuthManagementService } from '../../auth/auth-management.service';\r\nimport { User } from '../../../shared/models/user.model';\r\n\r\n\r\n@Directive({\r\n  selector: '[hasPermission]'\r\n})\r\nexport class PermissionDirective implements OnInit {\r\n  /**\r\n   * Current user to inspect his privileges\r\n   */\r\n  private currentUser: User;\r\n  /**\r\n   * Privileges to analize\r\n   */\r\n  private privileges: string[] = [];\r\n  /**\r\n   * Operation to add conditional. OR / AND\r\n   */\r\n  logicalOperation: 'OR' | 'AND' = 'OR';\r\n  /**\r\n   * Determinates if viewContainer is hidden or not\r\n   */\r\n  private isHidden = true;\r\n  /**\r\n   * \r\n   * @param templateRef \r\n   * @param viewContainer \r\n   * @param applicationUserService \r\n   */\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    private authManagementService: AuthManagementService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authManagementService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      this.updateView();\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  set hasPermission(val) {\r\n    this.privileges = val;\r\n    this.updateView();\r\n  }\r\n  \r\n  @Input()\r\n  set hasPermissionOperation(permop) {\r\n    this.logicalOperation = permop;\r\n    this.updateView();\r\n  }\r\n\r\n  /**\r\n   * Update view if is needed based on user privileges\r\n   */\r\n  private updateView() {\r\n    if (this.checkPermission()) {\r\n      if(this.isHidden) {\r\n        this.viewContainer.createEmbeddedView(this.templateRef);\r\n        this.isHidden = false;\r\n      }\r\n    } else {\r\n      this.isHidden = true;\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check the user privileges if the operational\r\n   * @returns boolean if component must be renderized or not\r\n   */\r\n  private checkPermission(): boolean {\r\n    let hasPermission = false;\r\n    if (this.currentUser && this.currentUser.roles && this.currentUser.roles.length) {\r\n      for (const checkPrivilege of this.privileges) {\r\n        const permissionFound = this.authManagementService.userCan([checkPrivilege]);\r\n        if (permissionFound) {\r\n          hasPermission = true;\r\n          if (this.logicalOperation === 'OR') {\r\n            break;\r\n          }\r\n        } else {\r\n          hasPermission = false;\r\n          if (this.logicalOperation === 'AND') {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return hasPermission;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumbersOnlyDirective } from './numbers-only/numbers-only.directive';\r\nimport { UppercaseDirective } from './uppercase/uppercase.directive';\r\nimport { PermissionDirective } from './permission/permission.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NumbersOnlyDirective,\r\n    UppercaseDirective,\r\n    PermissionDirective\r\n  ],\r\n  exports: [\r\n    NumbersOnlyDirective,\r\n    UppercaseDirective,\r\n    PermissionDirective\r\n  ]\r\n})\r\nexport class DirectivesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../../shared/models/user.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthDataService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public authenticate(email: string, password: string): Observable<any> {\r\n    return this.http.post<any>(`${environment.apiUrl}/login`, { email, password });\r\n  }\r\n\r\n  public authenticateGoogle(tokenGoogle: string): Observable<any> {\r\n    return this.http.post<any>(`${environment.apiUrl}/login/google`, { token: tokenGoogle });\r\n  }\r\n\r\n  public logout(): Observable<User> {\r\n    return this.http.post<any>(`${environment.apiUrl}/login/revoke`, {}, { withCredentials: true });\r\n  }\r\n\r\n  public refreshToken() {\r\n    return this.http.post<any>(`${environment.apiUrl}/login/refresh`, {}, { withCredentials: true });\r\n  }\r\n\r\n  /**\r\n   * Get user\r\n   * @param User User to register\r\n   */\r\n  public register(user: User): Observable<any> {\r\n    return this.http.post<any>(`${environment.apiUrl}/users/register`, user);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Self, HostListener, Renderer2 } from '@angular/core';\r\nimport { A, Z } from '@angular/cdk/keycodes';\r\n@Directive({\r\n  selector: '[uppercase]',\r\n  host: {\r\n    '(input)': '$event'\r\n  }\r\n})\r\nexport class UppercaseDirective {\r\n  lastValue: string;\r\n  constructor(\r\n    @Self() private ref: ElementRef\r\n  ) { }\r\n\r\n  /** Handle keyboard letter to uppercase it */\r\n  @HostListener('input', ['$event']) onInput($event) \r\n  {\r\n    var start = $event.target.selectionStart;\r\n    var end = $event.target.selectionEnd;\r\n    $event.target.value = $event.target.value.toUpperCase();\r\n    $event.target.setSelectionRange(start, end);\r\n    $event.preventDefault();\r\n\r\n    if (!this.lastValue || (this.lastValue && $event.target.value.length > 0 && this.lastValue !== $event.target.value)) {\r\n      this.lastValue = this.ref.nativeElement.value = $event.target.value;\r\n      // Propagation\r\n      const evt = document.createEvent('HTMLEvents');\r\n      evt.initEvent('input', false, true);\r\n      event.target.dispatchEvent(evt);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'aula-planeta-prompt',\n  templateUrl: './prompt-component.html',\n  styleUrls: [ './prompt-component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PromptComponent {\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: { mobileType: 'ios' | 'android'; promptEvent?: any },\n    private bottomSheetRef: MatBottomSheetRef<PromptComponent>\n  ) // private translateService: TranslateService,\n  {\n  }\n\n  public installPwa(): void {\n    this.data.promptEvent.prompt();\n    this.close();\n  }\n\n  public close() {\n    this.bottomSheetRef.dismiss();\n  }\n}\n","\n<mat-toolbar *ngIf=\"data.mobileType === 'android'\" color=\"primary\" class=\"android-prompt\">\n    <button mat-button (click)=\"installPwa()\">\n    {{'aula-planeta.pwa.android' | translate}}\n    </button>\n    <button mat-icon-button (click)=\"close()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-toolbar>\n  \n  <div *ngIf=\"data.mobileType === 'ios'\" class=\"ios-prompt\">\n    <button class=\"close-ios-inv\" mat-button color=\"primary\" (click)=\"close()\"><mat-icon>close</mat-icon></button>\n    <div>{{'aula-planeta.pwa.ios' | translate}}</div>\n    <div><img [src]=\"'./assets/ios-menu-btn.png'\"> <mat-icon>navigate_next</mat-icon> <img [src]=\"'./assets/ios-add-btn.png'\"></div>\n  </div>","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthManagementService } from '../auth/auth-management.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  private authManagementService: AuthManagementService;\r\n  private localStorageService: LocalStorageService;\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // add authorization header with jwt token if available\r\n    this.authManagementService = this.injector.get(AuthManagementService);\r\n    this.localStorageService = this.injector.get(LocalStorageService);\r\n\r\n    const currentUser = this.authManagementService.currentUser;\r\n    const isAuthenticated = this.authManagementService.isAuthenticated;\r\n\r\n    const isLoggedIn = currentUser && isAuthenticated;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    if (isLoggedIn && isApiUrl) {\r\n      request = request.clone({\r\n        setHeaders: { 'x-token': `${this.localStorageService.getItem('JWT')}` }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nconst packageJson = require('../../../../package.json');\r\n\r\nexport const environment = {\r\n  appName: 'Aula Planeta',\r\n  envName: 'DEV',\r\n  production: false,\r\n  test: false,\r\n  apiUrl: 'https://aula-node-backend.herokuapp.com/api',\r\n  GOOGLE_ID: '926325069712-jotjgejnsjlgb1rcjrfolmd7kohdvtv5.apps.googleusercontent.com',\r\n  GOOGLE_SECRET: '_-1RPoeQfuLpZBo-F4I1yyhN',\r\n  i18nPrefix: '',\r\n  versions: {\r\n    app: packageJson.version,\r\n    angular: packageJson.dependencies['@angular/core'],\r\n    ngrx: packageJson.dependencies['@ngrx/store'],\r\n    material: packageJson.dependencies['@angular/material'],\r\n    bootstrap: packageJson.dependencies.bootstrap,\r\n    rxjs: packageJson.dependencies.rxjs,\r\n    ngxtranslate: packageJson.dependencies['@ngx-translate/core'],\r\n    fontAwesome: packageJson.dependencies['@fortawesome/fontawesome-free'],\r\n    angularCli: packageJson.devDependencies['@angular/cli'],\r\n    typescript: packageJson.devDependencies['typescript'],\r\n    cypress: packageJson.devDependencies['cypress'],\r\n    eslint: packageJson.devDependencies['eslint']\r\n  }\r\n};\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { NotificationService } from '../notifications/notification.service';\r\n\r\n/** Application-wide error handler that adds a UI notification to the error handling\r\n * provided by the default Angular ErrorHandler.\r\n */\r\n@Injectable()\r\nexport class AppErrorHandler extends ErrorHandler {\r\n  constructor(private notificationsService: NotificationService) {\r\n    super();\r\n  }\r\n\r\n  handleError(error: Error | HttpErrorResponse | any) {\r\n    // let displayMessage = 'An error occurred.';\r\n\r\n    // if (!environment.production) {\r\n    //   displayMessage += ' See console for details.';\r\n    // }\r\n\r\n    // this.notificationsService.error(displayMessage);\r\n    const err = (error && error.error && error.error.message) || error.statusText;\r\n    this.notificationsService.error(err);\r\n\r\n    super.handleError(error);\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  constructor(\r\n    private readonly snackBar: MatSnackBar,\r\n    private readonly zone: NgZone\r\n  ) {}\r\n\r\n  default(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'default-notification-overlay'\r\n    });\r\n  }\r\n\r\n  info(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'info-notification-overlay'\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'success-notification-overlay'\r\n    });\r\n  }\r\n\r\n  warn(message: string) {\r\n    this.show(message, {\r\n      duration: 2500,\r\n      panelClass: 'warning-notification-overlay'\r\n    });\r\n  }\r\n\r\n  error(message: string) {\r\n    this.show(message, {\r\n      duration: 3000,\r\n      panelClass: 'error-notification-overlay'\r\n    });\r\n  }\r\n\r\n  private show(message: string, configuration: MatSnackBarConfig) {\r\n    // Need to open snackBar from Angular zone to prevent issues with its position per\r\n    // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material\r\n    this.zone.run(() => this.snackBar.open(message, null, configuration));\r\n  }\r\n}\r\n","export const NIGHT_MODE_THEME = 'black-theme';\r\n\r\nexport type Language = 'en' | 'sk' | 'de' | 'fr' | 'es' | 'pt-br' | 'he';\r\n\r\nexport interface Settings {\r\n  language: string;\r\n  theme: string;\r\n  autoNightMode: boolean;\r\n  nightTheme: string;\r\n  stickyHeader: boolean;\r\n  pageAnimations: boolean;\r\n  pageAnimationsDisabled: boolean;\r\n  elementsAnimations: boolean;\r\n  hour: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst APP_PREFIX = 'aula-planeta-';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  constructor() {}\r\n\r\n  setItem(key: string, value: any) {\r\n    if (value) {\r\n      localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\r\n    } else {\r\n      localStorage.removeItem(`${APP_PREFIX}${key}`);\r\n    }\r\n  }\r\n\r\n  getItem(key: string) {\r\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\r\n  }\r\n\r\n  /** Tests that localStorage exists, can be written to, and read from. */\r\n  testLocalStorage() {\r\n    const testValue = 'testValue';\r\n    const testKey = 'testKey';\r\n    const errorMessage = 'localStorage did not return expected value';\r\n\r\n    this.setItem(testKey, testValue);\r\n    const retrievedValue = this.getItem(testKey);\r\n    this.removeItem(testKey);\r\n\r\n    if (retrievedValue !== testValue) {\r\n      throw new Error(errorMessage);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ProgressSpinnerService } from '../progress-spinner/progress-spinner.service';\r\n\r\nconst NO_SPINNER_LOADING_HEADER = 'NO_LOADER';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingInterceptor {\r\n  activeRequests: number = 0;\r\n\r\n  private progressSpinnerService: ProgressSpinnerService;\r\n\r\n  constructor(private injector: Injector) {\r\n    this.progressSpinnerService = this.injector.get(ProgressSpinnerService);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.headers.has(NO_SPINNER_LOADING_HEADER)) {\r\n      req = this.clearNoSpinnerHeader(req);\r\n      return next.handle(req);\r\n    } else {\r\n      this.activeRequests++;\r\n      this.progressSpinnerService.spin$.next(true);\r\n\r\n      return next.handle(req).pipe(\r\n        finalize(() => {\r\n          this.activeRequests--;\r\n          if (this.activeRequests === 0) {\r\n            this.progressSpinnerService.spin$.next(false);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate over httpHeaders from request and delete the NO_LOADER header\r\n   * @param req Request to analize\r\n   */\r\n  private clearNoSpinnerHeader(req: HttpRequest<any>): HttpRequest<any> {\r\n    let cloneHttpHeaders: HttpHeaders = new HttpHeaders();\r\n    req.headers.keys().forEach((key: string) => {\r\n      if (key !== NO_SPINNER_LOADING_HEADER) {\r\n        cloneHttpHeaders = cloneHttpHeaders.append(key, req.headers.get(key));\r\n      }\r\n    });\r\n    const reqMod = req.clone({\r\n      headers: cloneHttpHeaders\r\n    });\r\n    return reqMod;\r\n  }\r\n}\r\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Subscription, interval } from 'rxjs';\r\nimport { NIGHT_MODE_THEME, Settings } from '../../shared/models/settings.model';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { Router } from '@angular/router';\r\nimport { TitleService } from '../title/title.service';\r\nimport { AnimationsService } from '../core.module';\r\n\r\nexport const initial: Settings = {\r\n  language: 'es',\r\n  theme: 'default-theme',\r\n  autoNightMode: false,\r\n  nightTheme: NIGHT_MODE_THEME,\r\n  stickyHeader: true,\r\n  pageAnimations: false,\r\n  pageAnimationsDisabled: false,\r\n  elementsAnimations: false,\r\n  hour: 0\r\n};\r\n\r\nexport const SETTINGS_KEY = 'SETTINGS';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService implements OnDestroy {\r\n  private subscription: Subscription;\r\n  hour = new Date().getHours();\r\n  /**\r\n   * Contains the SomeThink list\r\n   */\r\n  private _settings: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  settings$ = this._settings.asObservable();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private overlayContainer: OverlayContainer,\r\n    private localStorageService: LocalStorageService,\r\n    private titleService: TitleService,\r\n    private animationsService: AnimationsService,\r\n    private translateService: TranslateService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    let settings = this.localStorageService.getItem(SETTINGS_KEY);\r\n    settings = settings ? settings : initial;\r\n    this.setTranslateServiceLanguage(settings.language);\r\n    this.updateTheme(settings.theme);\r\n    this.updateRouteAnimationType(settings.pageAnimations, settings.elementsAnimations);\r\n    this.modeNight();\r\n    this.settingsNext(settings);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  get settings() {\r\n    return this._settings.getValue();\r\n  }\r\n\r\n  modeNight() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.subscription = interval(60000).subscribe(() => {\r\n        const hour = new Date().getHours();\r\n        if (hour !== this.hour) {\r\n          this.hour = hour;\r\n          this.ngZone.run(() => {\r\n            if (this.settings.autoNightMode && (hour >= 21 || hour <= 7)) {\r\n              this.settingsNext({ ...this.settings });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update setting\r\n   * @param key Name atribute setting\r\n   * @param value Value os atribute\r\n   */\r\n  changeSetting(key: string, value: any) {\r\n    const { pageAnimations, elementsAnimations } = this.settings;\r\n    switch (key) {\r\n      case 'theme':\r\n        this.updateTheme(value);\r\n        break;\r\n      case 'language':\r\n        this.setTranslateServiceLanguage(value);\r\n        break;\r\n      case 'pageAnimations':\r\n        this.updateRouteAnimationType(!pageAnimations, elementsAnimations);\r\n      case 'elementsAnimations':\r\n        this.updateRouteAnimationType(pageAnimations, !elementsAnimations);\r\n        break;\r\n    }\r\n    this.settingsNext({ ...this.settings, [key]: value });\r\n  }\r\n\r\n  private updateTheme(effectiveTheme: string) {\r\n    const classList = this.overlayContainer.getContainerElement().classList;\r\n    const toRemove = Array.from(classList).filter((item: string) => item.includes('-theme'));\r\n    if (toRemove.length) {\r\n      classList.remove(...toRemove);\r\n    }\r\n    classList.add(effectiveTheme);\r\n  }\r\n\r\n  private updateRouteAnimationType(pageAnimations, elementsAnimations) {\r\n    this.animationsService.updateRouteAnimationType(pageAnimations, elementsAnimations);\r\n  }\r\n\r\n  private setTranslateServiceLanguage(lang: string) {\r\n    this.translateService.use(lang);\r\n    this.titleService.setTitle(this.router.routerState.snapshot.root, this.translateService);\r\n  }\r\n\r\n  /**\r\n   * Emit a settings\r\n   * @param SomeThink\r\n   */\r\n  private settingsNext(settings: Settings) {\r\n    this.localStorageService.setItem(SETTINGS_KEY, settings);\r\n    this._settings.next(settings);\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aula-planeta-progress-spinner',\r\n  templateUrl: './progress-spinner.component.html',\r\n  styleUrls: ['./progress-spinner.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProgressSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"app-loading\" aria-label=\"Cargando\">\r\n    <mat-spinner color=\"accent\" diameter=\"80\" aria-label=\"Icono Cargando 1\"></mat-spinner>\r\n    <mat-spinner color=\"accent\" diameter=\"40\" aria-label=\"Icono Cargando 2\"></mat-spinner>\r\n    <mat-spinner color=\"accent\" diameter=\"20\" aria-label=\"Icono Cargando 3\"></mat-spinner>\r\n</div>","import browser from 'browser-detect';\r\nimport { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { SettingsService } from './core/settings/settings.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { routeAnimations } from './core/core.module';\r\n\r\n@Component({\r\n  selector: 'aula-planeta-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.scss' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [ routeAnimations ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(public settingsService: SettingsService, private translateService: TranslateService) {}\r\n\r\n  private static isIEorEdgeOrSafari() {\r\n    console.log('browser name:', browser().name);\r\n    return [ 'ie', 'edge', 'safari' ].includes(browser().name);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.translateService.use('es');\r\n    if (AppComponent.isIEorEdgeOrSafari()) {\r\n      this.settingsService.changeSetting('pageAnimationsDisabled', true);\r\n    }\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Title } from '@angular/platform-browser';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { environment as env } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TitleService {\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private title: Title\r\n  ) {}\r\n\r\n  setTitle(\r\n    snapshot: ActivatedRouteSnapshot,\r\n    lazyTranslateService?: TranslateService\r\n  ) {\r\n    let lastChild = snapshot;\r\n    while (lastChild.children.length) {\r\n      lastChild = lastChild.children[0];\r\n    }\r\n    const { title } = lastChild.data;\r\n    const translate = lazyTranslateService || this.translateService;\r\n    if (title) {\r\n      translate\r\n        .get(title)\r\n        .pipe(filter((translatedTitle) => translatedTitle !== title))\r\n        .subscribe((translatedTitle) =>\r\n          this.title.setTitle(`${translatedTitle} - ${env.appName}`)\r\n        );\r\n    } else {\r\n      this.title.setTitle(env.appName);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\nimport { CoreModule } from './core/core.module';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SettingsPipe } from './services/data/pipes/settings.pipe';\r\n\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { MainComponent } from './features/main/main.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n\r\n    // core\r\n    CoreModule,\r\n\r\n    MaterialModule,\r\n\r\n    // app\r\n    AppRoutingModule,\r\n\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n      registrationStrategy: 'registerImmediately'\r\n    })\r\n  ],\r\n  declarations: [ AppComponent, SettingsPipe, MainComponent ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Settings } from '../../../shared/models/settings.model';\r\n\r\n@Pipe({\r\n  name: 'settings'\r\n})\r\nexport class SettingsPipe implements PipeTransform {\r\n  transform(settings: Settings, atribute: string): unknown {\r\n    const hour = new Date().getHours();\r\n    if (atribute === 'theme' && settings.autoNightMode) {\r\n      return (hour >= 21 || hour <= 7) ? settings.nightTheme : settings.theme\r\n    } else {\r\n      return settings[atribute];\r\n    } \r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[numbersOnly]'\r\n})\r\nexport class NumbersOnlyDirective {\r\n  private regex: RegExp = new RegExp(/[^0-9]*$/g);\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(e: KeyboardEvent) {\r\n    if (\r\n      // Allow: Delete, Backspace, Tab, Escape, Enter\r\n      [46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 ||\r\n      (e.keyCode === 65 && e.ctrlKey === true) || // Allow: Ctrl+A\r\n      (e.keyCode === 67 && e.ctrlKey === true) || // Allow: Ctrl+C\r\n      (e.keyCode === 86 && e.ctrlKey === true) || // Allow: Ctrl+V\r\n      (e.keyCode === 88 && e.ctrlKey === true) || // Allow: Ctrl+X\r\n      (e.keyCode === 65 && e.metaKey === true) || // Cmd+A (Mac)\r\n      (e.keyCode === 67 && e.metaKey === true) || // Cmd+C (Mac)\r\n      (e.keyCode === 86 && e.metaKey === true) || // Cmd+V (Mac)\r\n      (e.keyCode === 88 && e.metaKey === true) || // Cmd+X (Mac)\r\n      (e.keyCode >= 35 && e.keyCode <= 39) // Home, End, Left, Right\r\n    ) {\r\n      return;  // let it happen, don't do anything\r\n    }\r\n    // Ensure that it is a number and stop the keypress\r\n    if (\r\n      (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n      (e.keyCode < 96 || e.keyCode > 105)\r\n    ) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnimationsService {\r\n  private static routeAnimationType: RouteAnimationType = 'NONE';\r\n\r\n  constructor() {\r\n    AnimationsService.routeAnimationType = 'NONE';\r\n  }\r\n\r\n  static isRouteAnimationsType(type: RouteAnimationType) {\r\n    return AnimationsService.routeAnimationType === type;\r\n  }\r\n\r\n  updateRouteAnimationType(\r\n    pageAnimations: boolean,\r\n    elementsAnimations: boolean\r\n  ) {\r\n    AnimationsService.routeAnimationType =\r\n      pageAnimations && elementsAnimations\r\n        ? 'ALL'\r\n        : pageAnimations\r\n        ? 'PAGE'\r\n        : elementsAnimations\r\n        ? 'ELEMENTS'\r\n        : 'NONE';\r\n  }\r\n}\r\n\r\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\r\n","export default __webpack_public_path__ + \"logo_PLANETA72x72.png\";","import { forwardRef, Inject, Injectable, Injector } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthManagementService } from './auth-management.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n  private authManagementService: AuthManagementService;\r\n  constructor(private injector: Injector, private router: Router, private snackBar: MatSnackBar) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    this.authManagementService = this.injector.get(AuthManagementService);\r\n    if (this.authManagementService.currentUser) {\r\n      if (route.data.roles && !this.authManagementService.userCan(route.data.roles)) {\r\n        this.snackBar.open('No tienes privilegios', 'OK', {\r\n          duration: 2000\r\n        });\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate([ '/login' ]);\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatPaginatorModule,\r\n    MatBottomSheetModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { disableClose: true, hasBackdrop: true } },\r\n    { provide: MAT_DATE_LOCALE, useValue: 'es-ES' }\r\n  ],\r\n  exports: [\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatPaginatorModule,\r\n    MatBottomSheetModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Injectable, OnDestroy, Injector, OnInit } from '@angular/core';\r\n\r\n//cdk\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\n\r\n//rxjs\r\nimport { Subject } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ProgressSpinnerComponent } from './progress-spinner.component';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgressSpinnerService implements OnDestroy {\r\n  private overlay: Overlay;\r\n  private router: Router;\r\n  public spin$: Subject<Boolean> = new Subject();\r\n\r\n  /**\r\n   * Use to destroy and prevent memory leaks\r\n   */\r\n  private destroy$: Subject<void> = new Subject<void>();\r\n  private spinnerTopRef;\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  public initProgressSpinnerService() {\r\n    this.overlay = this.injector.get(Overlay);\r\n    this.spinnerTopRef = this.cdkSpinnerCreate();\r\n\r\n    this.spin$.asObservable().pipe(map((val) => (val ? true : false))).subscribe((res) => {\r\n      if (res && !this.spinnerTopRef.hasAttached()) {\r\n        this.showSpinner();\r\n      } else if (!res && this.spinnerTopRef.hasAttached()) {\r\n        this.stopSpinner();\r\n      }\r\n    });\r\n\r\n    if (this.router) {\r\n      this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\r\n        this.navigationInterceptor(event);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Shows and hides the loading spinner during RouterEvent changes\r\n  public navigationInterceptor(event): void {\r\n    if (event instanceof NavigationStart) {\r\n      this.spin$.next(true);\r\n    }\r\n\r\n    if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\r\n      this.spin$.next(false);\r\n    }\r\n  }\r\n\r\n  private cdkSpinnerCreate() {\r\n    return this.overlay.create({\r\n      hasBackdrop: true,\r\n      backdropClass: 'dark-backdrop',\r\n      positionStrategy: this.overlay.position().global().centerHorizontally().centerVertically()\r\n    });\r\n  }\r\n\r\n  private showSpinner() {\r\n    this.spinnerTopRef.attach(new ComponentPortal(ProgressSpinnerComponent));\r\n  }\r\n\r\n  private stopSpinner() {\r\n    this.spinnerTopRef.detach();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from '../../shared/models/user.model';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Role } from '../../shared/models/role.model';\r\nimport { AuthDataService } from './auth-data.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SocialAuthService } from 'angularx-social-login';\r\nimport { MicrosoftLoginProvider, GoogleLoginProvider } from 'angularx-social-login';\r\n\r\n\r\nexport const AUTH_KEY = 'AUTH';\r\nexport const JWT = 'JWT';\r\nexport const CURRENT_USER = 'CURRENT_USER';\r\nexport const ROLES = 'ROLES';\r\n\r\nexport interface AuthState {\r\n  isAuthenticated: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthManagementService {\r\n  /**\r\n   * Contains the isAuthenticated \r\n   */\r\n  private _isAuthenticated: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  isAuthenticated$ = this._isAuthenticated.asObservable();\r\n\r\n  /**\r\n   * Contains the isAuthenticated \r\n   */\r\n  private _currentUser: BehaviorSubject<User> = new BehaviorSubject(null);\r\n  public currentUser$ = this._currentUser.asObservable();\r\n\r\n  /**\r\n   * Contains the isAuthenticated \r\n   */\r\n  private _roles: BehaviorSubject<Role[]> = new BehaviorSubject(null);\r\n  public roles$ = this._roles.asObservable();\r\n\r\n\r\n  constructor(\r\n    private localStorageService: LocalStorageService,\r\n    private authDataService: AuthDataService\r\n  ) {\r\n    const currentUser: User = this.localStorageService.getItem(CURRENT_USER);\r\n    this.currentUserNext(currentUser);\r\n\r\n    const roles: Role[] = this.localStorageService.getItem(ROLES);\r\n    this.roles =\r\n      roles && roles.length > 0\r\n        ? roles\r\n        : [\r\n          {\r\n            id: 0,\r\n            description: 'Alumno',\r\n            code: 'ALUMNO'\r\n          },\r\n          {\r\n            id: 1,\r\n            description: 'Profesor',\r\n            code: 'PROFESOR'\r\n          }\r\n        ];\r\n  }\r\n\r\n  /**\r\n   * getter currentUser\r\n   */\r\n  get currentUser() {\r\n    return this._currentUser.getValue();\r\n  }\r\n\r\n  /**\r\n   * Register\r\n   */\r\n  register(user: User) {\r\n    return this.authDataService.register(user).pipe(\r\n      map((data) => {\r\n        this.localStorageService.setItem(JWT, data.token)\r\n        return data.user;\r\n\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Login\r\n   */\r\n  authLogin(email: string, password: string) {\r\n    return this.authDataService.authenticate(email, password).pipe(\r\n      map((data) => {\r\n        this.currentUserNext(data.user);\r\n        this.isAuthenticatedNext(true);\r\n        this.startRefreshTokenTimer();\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * LoginGoogleUser\r\n   */\r\n  authLoginGoogle(tokenGoogle: string) {\r\n    return this.authDataService.authenticateGoogle(tokenGoogle).pipe(\r\n      map((data) => {\r\n        this.localStorageService.setItem(JWT, data.token)\r\n        this.currentUserNext(data.user);\r\n        this.isAuthenticatedNext(true);\r\n        this.startRefreshTokenTimer();\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Logout\r\n   */\r\n  authLogout() {\r\n    this.currentUserNext(null);\r\n    this.isAuthenticatedNext(false);\r\n    this.stopRefreshTokenTimer();\r\n    // this.authDataService.logout().subscribe();\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.authDataService.refreshToken().pipe(\r\n      map((user) => {\r\n        this.currentUserNext(user);\r\n        this.startRefreshTokenTimer();\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if user has roles\r\n   * @param hasRoles \r\n   */\r\n  userCan(hasRoles: string[]): boolean {\r\n    return hasRoles.some((role) => {\r\n      return this.currentUser.roles = role;\r\n      // return this.currentUser.roles.some((currentRole) => {\r\n      //   return currentRole.code === role;\r\n      // });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * getter isAuthenticated\r\n   */\r\n  public get isAuthenticated() {\r\n    return this._isAuthenticated.getValue();\r\n  }\r\n\r\n  /**\r\n   * getter roles\r\n   */\r\n  private get roles() {\r\n    return this._roles.getValue();\r\n  }\r\n\r\n  /**\r\n   * Emit a roles\r\n   * @param roles\r\n   */\r\n  private set roles(roles: Role[]) {\r\n    this._roles.next(roles);\r\n    this.localStorageService.setItem(ROLES, roles);\r\n  }\r\n\r\n  /**\r\n   * Emit a isAuthenticated\r\n   * @param isAuthenticated\r\n   */\r\n  private isAuthenticatedNext(isAuthenticated: boolean) {\r\n    this._isAuthenticated.next(isAuthenticated);\r\n    this.localStorageService.setItem(AUTH_KEY, { isAuthenticated });\r\n  }\r\n\r\n  /**\r\n   * Emit a user\r\n   * @param user\r\n   */\r\n  private currentUserNext(user: User) {\r\n    this._currentUser.next(user);\r\n    this.localStorageService.setItem(CURRENT_USER, user);\r\n  }\r\n\r\n  private refreshTokenTimeout;\r\n\r\n  private startRefreshTokenTimer() {\r\n    // parse json object from base64 encoded jwt token\r\n    const jwtToken = JSON.parse(atob(this.localStorageService.getItem(JWT).split('.')[1]));\r\n\r\n    // set a timeout to refresh the token a minute before it expires\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(() => this.refreshToken().subscribe(), timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { fromEvent, Observable } from 'rxjs';\n\nexport enum ConnectionStatusEnum {\n  Online,\n  Offline\n}\n\nexport class NetworkConnection {\n\n  public static status: ConnectionStatusEnum = ConnectionStatusEnum.Online;\n  private static online$: Observable<Event>;\n  private static offline$: Observable<Event>;\n\n  public static init() {\n    NetworkConnection.online$ = fromEvent(window, 'online');\n    NetworkConnection.offline$ = fromEvent(window, 'offline');\n\n    NetworkConnection.status = navigator.onLine ? 0 : 1;\n\n    NetworkConnection.online$.subscribe(e => {\n      console.log('Online');\n      NetworkConnection.status = ConnectionStatusEnum.Online;\n    });\n\n    NetworkConnection.offline$.subscribe(e => {\n      console.log('Offline');\n      NetworkConnection.status = ConnectionStatusEnum.Offline;\n    });\n  }\n\n  constructor() {\n    NetworkConnection.init();\n  }\n\n}\n\nnew NetworkConnection();","import { CommonModule } from '@angular/common';\r\nimport { NgModule, Optional, SkipSelf, ErrorHandler, APP_INITIALIZER } from '@angular/core';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { FaIconLibrary, FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport { TitleService } from './title/title.service';\r\nimport { ROUTE_ANIMATIONS_ELEMENTS, routeAnimations } from './animations/route.animations';\r\nimport { AnimationsService } from './animations/animations.service';\r\nimport { AppErrorHandler } from './error-handler/app-error-handler.service';\r\nimport { LocalStorageService } from './local-storage/local-storage.service';\r\nimport { HttpErrorInterceptor } from './http-interceptors/http-error.interceptor';\r\nimport { LoadingInterceptor } from './http-interceptors/loading.interceptor';\r\nimport { NotificationService } from './notifications/notification.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { faCog, faBars, faRocket, faPowerOff, faUserCircle, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub, faMediumM, faTwitter, faInstagram, faYoutube } from '@fortawesome/free-brands-svg-icons';\r\nimport { JwtInterceptor } from './http-interceptors/jwt.interceptor';\r\nimport { AuthManagementService } from './auth/auth-management.service';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { DirectivesModule } from './directives/directives.module';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { RouteReuseService } from './router-reuse/router-reuse.service';\r\nimport { PwaService } from './pwa/pwa.service';\r\nimport { PromptComponent } from './pwa/components/prompt/prompt-component';\r\nimport { ProgressSpinnerService } from './progress-spinner/progress-spinner.service';\r\nimport { ProgressSpinnerComponent } from './progress-spinner/progress-spinner.component';\r\nimport { GoogleLoginProvider, MicrosoftLoginProvider, SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\nimport { NetworkConnection } from './network-connection/network-connection.service';\r\n\r\nexport {\r\n  TitleService,\r\n  routeAnimations,\r\n  LocalStorageService,\r\n  ROUTE_ANIMATIONS_ELEMENTS,\r\n  AnimationsService,\r\n  AuthManagementService,\r\n  NotificationService\r\n};\r\n\r\nexport function httpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, `${environment.i18nPrefix}/assets/i18n/`, '.json');\r\n}\r\n\r\nconst initializerPwaService = (pwaService: PwaService) => () => pwaService.initPwaPrompt();\r\nconst initializerProgressSpinnerService = (progressSpinnerService: ProgressSpinnerService) => () =>\r\n  progressSpinnerService.initProgressSpinnerService();\r\n\r\nconst googleLoginOptions = {\r\n  scope: 'profile email openid'\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n\r\n    // material\r\n    MaterialModule,\r\n\r\n    DirectivesModule,\r\n\r\n    SocialLoginModule,\r\n\r\n    // 3rd party\r\n    FontAwesomeModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  declarations: [PromptComponent, ProgressSpinnerComponent],\r\n  providers: [\r\n    NetworkConnection,\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: ErrorHandler, useClass: AppErrorHandler },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializerPwaService,\r\n      deps: [PwaService],\r\n      multi: true\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializerProgressSpinnerService,\r\n      deps: [ProgressSpinnerService],\r\n      multi: true\r\n    },\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\r\n              environment.GOOGLE_ID, googleLoginOptions\r\n            )\r\n          },\r\n          {\r\n            id: MicrosoftLoginProvider.PROVIDER_ID,\r\n            provider: new MicrosoftLoginProvider('clientId')\r\n          }\r\n        ]\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n\r\n    // { provide: RouteReuseStrategy, useClass: RouteReuseService }\r\n  ],\r\n  exports: [\r\n    // angular\r\n    FormsModule,\r\n\r\n    // material\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    DirectivesModule,\r\n\r\n    // 3rd party\r\n    FontAwesomeModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    parentModule: CoreModule,\r\n    faIconLibrary: FaIconLibrary\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\r\n    }\r\n    faIconLibrary.addIcons(\r\n      faCog,\r\n      faBars,\r\n      faRocket,\r\n      faPowerOff,\r\n      faUserCircle,\r\n      faPlayCircle,\r\n      faGithub,\r\n      faMediumM,\r\n      faTwitter,\r\n      faInstagram,\r\n      faYoutube\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, HostListener } from '@angular/core';\r\nimport { AuthManagementService } from '../../core/auth/auth-management.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { SettingsService } from '../../core/settings/settings.service';\r\nimport { environment as env } from '../../../environments/environment';\r\nimport { Settings } from '../../shared/models/settings.model';\r\nimport { routeAnimations } from '../../core/animations/route.animations';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../shared/models/user.model';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { SocialAuthService } from 'angularx-social-login';\r\n\r\n@Component({\r\n  selector: 'aula-planeta-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [routeAnimations]\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n  isProd = env.production;\r\n  envName = env.envName;\r\n  version = env.versions.app;\r\n  year = new Date().getFullYear();\r\n  logo = require('../../../assets/logo_PLANETA72x72.png').default;\r\n  languages = ['en', 'de', 'sk', 'fr', 'es', 'pt-br', 'zh-cn', 'he'];\r\n  navigation = [{ link: 'examples', label: 'aula-planeta.menu.examples' }];\r\n  navigationSideMenu = [...this.navigation, { link: 'settings', label: 'aula-planeta.menu.settings' }];\r\n  isScrolling = false;\r\n\r\n  sideconf = {\r\n    fixed: false,\r\n    open: true\r\n  };\r\n\r\n  settings$: Observable<Settings>;\r\n\r\n  private destroy$: Subject<void> = new Subject<void>();\r\n\r\n  user: User;\r\n\r\n  constructor(\r\n    public authManagementService: AuthManagementService,\r\n    private authService: SocialAuthService,\r\n    public settingsService: SettingsService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authManagementService.currentUser$.pipe(take(1), takeUntil(this.destroy$)).subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.router.navigate(['/login']);\r\n    if (this.user.google) {\r\n      this.authService.signOut();\r\n    }\r\n    this.authManagementService.authLogout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  eventoScroll($event) {\r\n    let scrollOffset = $event.srcElement.children[0].scrollTop;\r\n    this.isScrolling = scrollOffset > 0 ? true : false;\r\n  }\r\n}\r\n","<div [class]=\"'theme-wrapper ' + (settingsService.settings$  | async | settings: 'theme')\">\r\n    <div class=\"wrapper\">\r\n\r\n        <header role=\"heading\" class=\"toolbar\" [style.position]=\"(settingsService.settings$  | async | settings: 'stickyHeader') ? 'fixed' : 'inherit'\" (window.scroll)=\"eventoScroll($event)\" [class.mat-elevation-z3]=\"isScrolling\">\r\n\r\n            <mat-toolbar color=\"primary\">\r\n\r\n                <button role=\"button\" mat-icon-button aria-label=\"Menú\" (click)=\"sidenav.toggle()\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button>\r\n\r\n                <span class=\"spacer d-inline\">aulaPlaneta</span>\r\n\r\n                <button id=\"toolbarUserMenu\" role=\"button\" aria-label=\"Menú de usuario\" mat-button [matMenuTriggerFor]=\"toolbarUserMenu\">\r\n                    <mat-icon class=\"mr-0 mr-sm-2\">account_circle</mat-icon>\r\n                    <span *ngIf=\"user\" class=\"d-none d-sm-inline\">Hola, {{user.firstName}} {{user.lastName}}</span>\r\n                </button>\r\n                \r\n\r\n                <mat-menu #toolbarUserMenu=\"matMenu\">\r\n                    <button role=\"button\" mat-menu-item routerLink=\"settings\">\r\n                        <mat-icon>settings</mat-icon>\r\n                        <span>{{ 'aula-planeta.menu.settings' | translate }}</span>\r\n                    </button>\r\n                    <button role=\"button\" mat-menu-item (click)=\"onLogoutClick()\">\r\n                        <mat-icon>exit_to_app</mat-icon>\r\n                        <span>{{ 'aula-planeta.menu.logout' | translate }}</span>\r\n                    </button>\r\n                </mat-menu>\r\n\r\n            </mat-toolbar>\r\n        </header>\r\n\r\n        <div class=\"content\" [@routeAnimations]=\"o.isActivated && o.activatedRoute.routeConfig.data && o.activatedRoute.routeConfig.data.title\">\r\n            \r\n            <mat-sidenav-container role=\"main\">\r\n                <mat-sidenav #sidenav mode=\"side\" role=\"navigation\">\r\n                    <mat-nav-list>\r\n                        <a mat-list-item *ngFor=\"let item of navigationSideMenu\" (click)=\"sidenav.close()\" [routerLink]=\"[item.link]\" routerLinkActive=\"active\">\r\n                            {{item.label | translate}}\r\n                        </a>\r\n                    </mat-nav-list>\r\n                </mat-sidenav>\r\n\r\n                <router-outlet #o=\"outlet\"></router-outlet>\r\n            </mat-sidenav-container>\r\n\r\n            <div class=\"footer\" role=\"region\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 links\">\r\n                            <a href=\"https://twitter.com/aulaplaneta?lang=es\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <fa-icon [icon]=\"['fab','twitter']\"></fa-icon>\r\n                                <span>Twitter</span>\r\n                            </a>\r\n                            <a href=\"https://www.youtube.com/channel/UCR_vBgIJw21LQoSadb16tvA\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <fa-icon [icon]=\"['fab','youtube']\"></fa-icon>\r\n                                <span>Youtube</span>\r\n                            </a>\r\n                            <a href=\"https://www.instagram.com/aulaplaneta/?hl=es\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <fa-icon [icon]=\"['fab','instagram']\"></fa-icon>\r\n                                <span>Instagram</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 signature\">\r\n                            &#169; <span class=\"year\">{{year}}</span> Planeta\r\n                            <br class=\"d-block d-sm-none\">\r\n                            <a [matTooltip]=\"'aula-planeta.footer.changelog' | translate\" matTooltipPosition=\"before\" href=\"https://www.googles.es\">\r\n                                <fa-icon icon=\"rocket\"></fa-icon>\r\n                                {{version}} <span *ngIf=\"!isProd\">[{{envName}}]</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { MainComponent } from './features/main/main.component';\r\nimport { AuthGuardService } from './core/auth/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'examples',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./features/login/login.module').then((m) => m.LoginModule)\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainComponent,\r\n    children: [\r\n      {\r\n        path: 'settings',\r\n        loadChildren: () => import('./features/settings/settings.module').then((m) => m.SettingsModule),\r\n        canActivate: [AuthGuardService],\r\n      },\r\n      {\r\n        path: 'examples',\r\n        loadChildren: () => import('./features/examples/examples.module').then((m) => m.ExamplesModule),\r\n        canActivate: [AuthGuardService],\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  // useHash supports github.io demo page, remove in your app\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      useHash: true,\r\n      scrollPositionRestoration: 'disabled',\r\n      preloadingStrategy: PreloadAllModules\r\n    })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable, Injector, ErrorHandler } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n/** Passes HttpErrorResponse to application-wide error handler */\r\n@Injectable({ providedIn: 'root' })\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap({\r\n        error: (err: any) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            const appErrorHandler = this.injector.get(ErrorHandler);\r\n            appErrorHandler.handleError(err);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}