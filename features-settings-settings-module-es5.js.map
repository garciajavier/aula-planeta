{"version":3,"sources":["webpack:///src/app/features/settings/settings.module.ts","webpack:///src/app/features/settings/settings-routing.module.ts","webpack:///src/app/features/settings/settings/settings-container.component.ts","webpack:///src/app/features/settings/settings/settings-container.component.html"],"names":["SettingsModule","declarations","imports","routes","path","component","data","title","SettingsRoutingModule","forChild","exports","SettingsContainerComponent","settingsService","routeAnimationsElements","themes","value","label","languages","language","changeSetting","theme","autoNightMode","checked","stickyHeader","pageAnimations","elementsAnimations","selector","templateUrl","styleUrls"],"mappings":"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","file":"features-settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { SettingsRoutingModule } from './settings-routing.module';\r\nimport { SettingsContainerComponent } from './settings/settings-container.component';\r\n\r\n@NgModule({\r\n  declarations: [SettingsContainerComponent],\r\n  imports: [CommonModule, SharedModule, SettingsRoutingModule]\r\n})\r\nexport class SettingsModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SettingsContainerComponent } from './settings/settings-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SettingsContainerComponent,\r\n    data: { title: 'aula-planeta.menu.settings' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingsRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\r\nimport { SettingsService } from '../../../core/settings/settings.service';\r\nimport { Settings } from '../../../shared/models/settings.model';\r\n\r\n@Component({\r\n  selector: 'aula-planeta-settings',\r\n  templateUrl: './settings-container.component.html',\r\n  styleUrls: [ './settings-container.component.scss' ]\r\n})\r\nexport class SettingsContainerComponent implements OnInit {\r\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\r\n  settings$: Observable<Settings>;\r\n\r\n  themes = [\r\n    { value: 'default-theme', label: 'blue' },\r\n    { value: 'light-theme', label: 'light' },\r\n    { value: 'nature-theme', label: 'nature' },\r\n    { value: 'black-theme', label: 'dark' }\r\n  ];\r\n\r\n  languages = [\r\n    { value: 'en', label: 'English' },\r\n    { value: 'de', label: 'Deutsch' },\r\n    { value: 'sk', label: 'Slovenčina' },\r\n    { value: 'fr', label: 'Français' },\r\n    { value: 'es', label: 'Español' },\r\n    { value: 'pt-br', label: 'Português' },\r\n    { value: 'zh-cn', label: '简体中文' },\r\n    { value: 'he', label: 'עברית' }\r\n  ];\r\n\r\n  constructor(public settingsService: SettingsService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onLanguageSelect({ value: language }) {\r\n    this.settingsService.changeSetting('language', language);\r\n  }\r\n\r\n  onThemeSelect({ value: theme }) {\r\n    this.settingsService.changeSetting('theme', theme);\r\n  }\r\n\r\n  onAutoNightModeToggle({ checked: autoNightMode }) {\r\n    this.settingsService.changeSetting('autoNightMode', autoNightMode);\r\n  }\r\n\r\n  onStickyHeaderToggle({ checked: stickyHeader }) {\r\n    this.settingsService.changeSetting('stickyHeader', stickyHeader);\r\n  }\r\n\r\n  onPageAnimationsToggle({ checked: pageAnimations }) {\r\n    this.settingsService.changeSetting('pageAnimations', pageAnimations);\r\n  }\r\n\r\n  onElementsAnimationsToggle({ checked: elementsAnimations }) {\r\n    this.settingsService.changeSetting('elementsAnimations', elementsAnimations);\r\n  }\r\n}\r\n","<div class=\"container\" role=\"region\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <h1>{{ 'aula-planeta.settings.title' | translate }}</h1>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <ng-container *ngIf=\"settingsService.settings$ | async as settings\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n                <h2>{{ 'aula-planeta.settings.general.title' | translate }}</h2>\r\n                <div class=\"icon-form-field\">\r\n                    <mat-icon color=\"accent\" aria-label=\"Idiomas\">\r\n                        <fa-icon icon=\"language\" color=\"accent\"></fa-icon>\r\n                    </mat-icon>\r\n                    <mat-form-field>\r\n                        <mat-select [aria-label]=\"'aula-planeta.settings.general.placeholder' | translate\" [placeholder]=\"'aula-planeta.settings.general.placeholder' | translate\" [ngModel]=\"settings.language\" (selectionChange)=\"onLanguageSelect($event)\" name=\"language\" panelClass=\"cdkSelect\">\r\n                            <ng-container *ngFor=\"let l of languages\">\r\n                                <!-- ngFor hack of missing ngLet of Angular -->\r\n                                <mat-option *ngFor=\"let title of ['aula-planeta.settings.general.language.' + l.value | translate]\" [value]=\"l.value\" [title]=\"title !== l.label\r\n                    ? title\r\n                    : ''\">\r\n                                    {{ l.label }}\r\n                                </mat-option>\r\n                            </ng-container>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"icon-form-field\">\r\n                    <mat-icon color=\"accent\" aria-label=\"Menu\">\r\n                        <fa-icon icon=\"bars\" color=\"accent\"></fa-icon>\r\n                    </mat-icon>\r\n                    <mat-placeholder>{{ 'aula-planeta.settings.themes.sticky-header' | translate }}\r\n                    </mat-placeholder>\r\n                    <mat-slide-toggle [aria-label]=\"'aula-planeta.settings.themes.sticky-header' | translate\" [checked]=\"settings.stickyHeader\" (change)=\"onStickyHeaderToggle($event)\">\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n                <h2>{{ 'aula-planeta.settings.themes.title' | translate }}</h2>\r\n                <div class=\"icon-form-field\">\r\n                    <mat-icon color=\"accent\" aria-label=\"Temas\">\r\n                        <fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon>\r\n                    </mat-icon>\r\n                    <mat-form-field>\r\n                        <mat-select [aria-label]=\"'aula-planeta.settings.themes.placeholder' | translate\" [placeholder]=\"'aula-planeta.settings.themes.placeholder' | translate\" [ngModel]=\"settings.theme\" (selectionChange)=\"onThemeSelect($event)\" name=\"themes\" panelClass=\"cdkSelect\">\r\n                            <mat-option *ngFor=\"let t of themes\" [value]=\"t.value\">\r\n                                {{ 'aula-planeta.settings.themes.' + t.label | translate }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"icon-form-field\">\r\n                    <mat-icon color=\"accent\" aria-label=\"Modo noche\">\r\n                        <fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon>\r\n                    </mat-icon>\r\n                    <mat-placeholder>{{ 'aula-planeta.settings.themes.night-mode' | translate }}\r\n                    </mat-placeholder>\r\n                    <mat-slide-toggle [aria-label]=\"'aula-planeta.settings.themes.night-mode' | translate\" [checked]=\"settings.autoNightMode\" (change)=\"onAutoNightModeToggle($event)\">\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n                <h2>{{ 'aula-planeta.settings.animations.title' | translate }}</h2>\r\n                <div class=\"icon-form-field\">\r\n                    <mat-icon color=\"accent\">\r\n                        <mat-icon color=\"accent\" aria-label=\"Animación a pantalla completa\">\r\n                            <fa-icon icon=\"window-maximize\"></fa-icon>\r\n                        </mat-icon>\r\n                    </mat-icon>\r\n                    <mat-placeholder>{{ 'aula-planeta.settings.animations.page' | translate }}\r\n                    </mat-placeholder>\r\n                    <mat-slide-toggle aria-label=\"Sorry, this feature is disabled in IE, EDGE and Safari\" matTooltip=\"Sorry, this feature is disabled in IE, EDGE and Safari\" matTooltipPosition=\"before\" *ngIf=\"settings.pageAnimationsDisabled\" disabled>\r\n                    </mat-slide-toggle>\r\n                    <mat-slide-toggle [aria-label]=\"'aula-planeta.settings.animations.page' | translate\" *ngIf=\"!settings.pageAnimationsDisabled\" [checked]=\"settings.pageAnimations\" (change)=\"onPageAnimationsToggle($event)\">\r\n                    </mat-slide-toggle>\r\n                </div>\r\n                <div class=\"icon-form-field\">\r\n                    <mat-icon color=\"accent\" aria-label=\"Paginación deslizante\">\r\n                        <fa-icon icon=\"stream\" color=\"accent\"></fa-icon>\r\n                    </mat-icon>\r\n                    <mat-placeholder>{{ 'aula-planeta.settings.animations.elements' | translate }}\r\n                    </mat-placeholder>\r\n                    <mat-slide-toggle [aria-label]=\"'aula-planeta.settings.animations.elements' | translate\" [checked]=\"settings.elementsAnimations\" (change)=\"onElementsAnimationsToggle($event)\">\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>"]}