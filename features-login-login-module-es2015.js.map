{"version":3,"sources":["./src/app/features/login/login-routing.module.ts","./src/app/features/login/login/login.component.ts","./src/app/features/login/login/login.component.html","./src/app/features/login/register/register.component.ts","./src/app/features/login/register/register.component.html","./src/app/features/login/login.module.ts"],"names":[],"mappings":"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","file":"features-login-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthManagementService } from '../../../core/auth/auth-management.service';\r\nimport { SocialAuthService, MicrosoftLoginProvider, GoogleLoginProvider } from 'angularx-social-login';\r\n\r\n\r\n@Component({\r\n  templateUrl: 'login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Use to destroy and prevent memory leaks\r\n   */\r\n  private destroy$: Subject<void> = new Subject<void>();\r\n\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthManagementService,\r\n    private authService: SocialAuthService\r\n  ) {\r\n    // redirect to starship if already logged in\r\n    if (this.authenticationService.currentUser) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    const key = 'returnUrl';\r\n    this.returnUrl = this.route.snapshot.queryParams[key] || '/';\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Submit login\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.authenticationService\r\n      .authLogin(this.f.email.value, this.f.password.value)\r\n      .pipe(take(1), takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.router.navigateByUrl('/');\r\n      });\r\n  }\r\n\r\n  socialLogin(name: string) {\r\n    switch (name) {\r\n      case 'google':\r\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(userGoogle => {\r\n          this.authenticationService\r\n            .authLoginGoogle(userGoogle.idToken)\r\n            .pipe(take(1), takeUntil(this.destroy$))\r\n            .subscribe(() => {\r\n              this.router.navigateByUrl('/');\r\n            });\r\n        });\r\n\r\n        break;\r\n      case 'microsoft':\r\n        this.authService.signIn(MicrosoftLoginProvider.PROVIDER_ID);\r\n        break;\r\n      default:\r\n        this.onSubmit();\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  register() {\r\n    this.router.navigateByUrl('/login/register');\r\n  }\r\n}\r\n","<div class=\"login-theme d-flex flex-row justify-content-center align-items-center\">\r\n    <mat-card>\r\n\r\n        <mat-card-title-group>\r\n            <mat-card-title>Ingresa a aulaPlaneta</mat-card-title>\r\n        </mat-card-title-group>\r\n\r\n        <mat-card-content>\r\n            <form role=\"form\" class=\"d-flex flex-column\" [formGroup]=\"loginForm\">\r\n                <fieldset class=\"d-flex flex-column\">\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label>Usuario</mat-label>\r\n                        <input matInput name=\"email\" type=\"text\" formControlName=\"email\">\r\n                        <mat-error>Campo requerido</mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label>Contraseña</mat-label>\r\n                        <input matInput name=\"password\" type=\"password\" formControlName=\"password\">\r\n                        <mat-error>Campo requerido</mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <button role=\"button\" (click)=\"onSubmit()\" type=\"submit\" mat-raised-button color=\"primary\" class=\"w-100\" [disabled]=\"loginForm.invalid\">Entrar</button>\r\n                </fieldset>\r\n            \r\n                <a class=\"text-center\" href=\"#\">¿Has olvidado tu contraseña?</a>\r\n\r\n                <button type=\"button\" role=\"button\" mat-raised-button color=\"accent\" class=\"w-100\" (click)=\"register()\">Crear cuenta</button>\r\n\r\n                <button type=\"button\" role=\"button\" mat-raised-button (click)=\"socialLogin('microsoft')\">\r\n                    <fa-icon [icon]=\"['fab','microsoft']\"></fa-icon>\r\n                    Entrar con Office365\r\n                </button>\r\n\r\n                <button role=\"button\" mat-raised-button (click)=\"socialLogin('google')\">\r\n                    <fa-icon [icon]=\"['fab','google']\"></fa-icon>\r\n                    Entrar con Google\r\n                </button>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <button role=\"button\" aria-label=\"Alumno\" mat-mini-fab color=\"primary\">\r\n        <mat-icon>school</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n\r\n","import { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthManagementService } from '../../../core/auth/auth-management.service';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Use to destroy and prevent memory leaks\r\n   */\r\n  private destroy$: Subject<void> = new Subject<void>();\r\n\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar,\r\n    private overlayContainer: OverlayContainer,\r\n    public authManagementService: AuthManagementService\r\n  ) {\r\n    this.overlayContainer.getContainerElement().classList.add('login-theme');\r\n\r\n    // redirect to starship if already logged in\r\n    if (this.authManagementService.currentUser) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', Validators.required, Validators.email],\r\n      roles: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4)]]\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Submit registration\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authManagementService\r\n      .register(this.registerForm.value)\r\n      .pipe(take(1), takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.snackBar.open('Registro completado', 'OK', {\r\n          duration: 2000\r\n        });\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n}\r\n","<div class=\"login-theme d-flex flex-row justify-content-center align-items-center\">\r\n    <mat-card>\r\n        <mat-card-title-group>\r\n            <mat-card-title>Crea a tu usuario</mat-card-title>\r\n        </mat-card-title-group>\r\n\r\n        <mat-card-content>\r\n            <form role=\"form\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                <fieldset class=\"d-flex flex-column\">\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label aria-label=\"Nombre\">Nombre</mat-label>\r\n                        <input matInput name=\"firstName\" type=\"text\" formControlName=\"firstName\">\r\n                        <mat-error>Campo requerido</mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label aria-label=\"Apellido\">Apellido</mat-label>\r\n                        <input matInput name=\"lastName\" type=\"text\" formControlName=\"lastName\">\r\n                        <mat-error>Campo requerido</mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label aria-label=\"Email\">email</mat-label>\r\n                        <input matInput name=\"email\" type=\"text\" formControlName=\"email\">\r\n                        <mat-error>Campo requerido</mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label aria-label=\"Contraseña\">Contraseña</mat-label>\r\n                        <input matInput name=\"password\" type=\"text\" formControlName=\"password\">\r\n                        <mat-error>Campo requerido</mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-label aria-label=\"Roles\">Roles</mat-label>\r\n                        <mat-select formControlName=\"roles\" multiple panelClass=\"cdkSelect\">\r\n                            <mat-option *ngFor=\"let role of (authManagementService.roles$ | async)\" [value]=\"role\">{{role.description}}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <button role=\"button\" (click)=\"onSubmit()\" type=\"submit\" mat-raised-button color=\"primary\" class=\"w-100\" [disabled]=\"registerForm.invalid\">Crear</button>\r\n                    <button role=\"button\" mat-raised-button color=\"accent\" class=\"w-100\" routerLink=\"/login\">Iniciar Sesión</button>\r\n                </fieldset>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MaterialModule } from '../../material/material.module';\r\nimport { FaIconLibrary, FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faMicrosoft } from '@fortawesome/free-brands-svg-icons';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    FontAwesomeModule\r\n  ],\r\n  exports: [\r\n    FontAwesomeModule\r\n  ]\r\n})\r\nexport class LoginModule {\r\n    constructor(faIconLibrary: FaIconLibrary) {\r\n    faIconLibrary.addIcons(\r\n      faMicrosoft,\r\n      faGoogle\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}