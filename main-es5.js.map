{"version":3,"sources":["webpack:///src/app/core/pwa/pwa.service.ts","webpack:///src/app/core/animations/route.animations.ts","webpack:///src/app/core/directives/permission/permission.directive.ts","webpack:///src/app/core/directives/directives.module.ts","webpack:///src/app/core/auth/auth-data.service.ts","webpack:///src/app/core/directives/uppercase/uppercase.directive.ts","webpack:///src/app/core/pwa/components/prompt/prompt-component.ts","webpack:///src/app/core/pwa/components/prompt/prompt-component.html","webpack:///src/app/core/http-interceptors/jwt.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/app/core/error-handler/app-error-handler.service.ts","webpack:///src/app/core/notifications/notification.service.ts","webpack:///src/app/shared/models/settings.model.ts","webpack:///src/app/core/local-storage/local-storage.service.ts","webpack:///src/app/core/http-interceptors/loading.interceptor.ts","webpack:///src/app/core/settings/settings.service.ts","webpack:///src/app/core/progress-spinner/progress-spinner.component.ts","webpack:///src/app/core/progress-spinner/progress-spinner.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/core/title/title.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/data/pipes/settings.pipe.ts","webpack:///src/app/core/directives/numbers-only/numbers-only.directive.ts","webpack:///src/app/core/animations/animations.service.ts","webpack:///src/assets/logo_PLANETA72x72.png","webpack:///src/app/core/auth/auth-guard.service.ts","webpack:///src/app/material/material.module.ts","webpack:///src/app/core/progress-spinner/progress-spinner.service.ts","webpack:///src/app/core/auth/auth-management.service.ts","webpack:///src/app/core/network-connection/network-connection.service.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/features/main/main.component.ts","webpack:///src/app/features/main/main.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/core/http-interceptors/http-error.interceptor.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["PwaService","bottomSheet","platform","swUpdate","translateService","destroy$","isEnabled","available","pipe","subscribe","confirm","instant","window","location","reload","ANDROID","addEventListener","event","preventDefault","promptEvent","openPromptComponent","IOS","isInStandaloneMode","navigator","mobileType","open","data","next","complete","providedIn","ROUTE_ANIMATIONS_ELEMENTS","STEPS_ALL","opacity","position","optional","transform","STEPS_NONE","STEPS_PAGE","STEPS_ELEMENTS","routeAnimations","isRouteAnimationsAll","isRouteAnimationsNone","isRouteAnimationsPage","isRouteAnimationsElements","isRouteAnimationsType","PermissionDirective","templateRef","viewContainer","authManagementService","privileges","logicalOperation","isHidden","currentUser$","user","currentUser","updateView","checkPermission","createEmbeddedView","clear","hasPermission","roles","length","checkPrivilege","permissionFound","userCan","val","permop","selector","hasPermissionOperation","DirectivesModule","imports","declarations","exports","AuthDataService","http","email","password","post","apiUrl","tokenGoogle","token","withCredentials","UppercaseDirective","ref","$event","start","target","selectionStart","end","selectionEnd","value","toUpperCase","setSelectionRange","lastValue","nativeElement","evt","document","createEvent","initEvent","dispatchEvent","host","onInput","PromptComponent","bottomSheetRef","prompt","close","dismiss","templateUrl","styleUrls","changeDetection","OnPush","JwtInterceptor","injector","request","get","localStorageService","isAuthenticated","isLoggedIn","isApiUrl","url","startsWith","clone","setHeaders","getItem","handle","packageJson","environment","appName","envName","production","test","GOOGLE_ID","GOOGLE_SECRET","i18nPrefix","versions","app","version","angular","dependencies","ngrx","material","bootstrap","rxjs","ngxtranslate","fontAwesome","angularCli","devDependencies","typescript","cypress","eslint","AppErrorHandler","notificationsService","error","err","message","statusText","NotificationService","snackBar","zone","show","duration","panelClass","configuration","run","NIGHT_MODE_THEME","APP_PREFIX","LocalStorageService","key","localStorage","setItem","JSON","stringify","removeItem","parse","testValue","testKey","errorMessage","retrievedValue","Error","NO_SPINNER_LOADING_HEADER","LoadingInterceptor","activeRequests","progressSpinnerService","req","headers","has","clearNoSpinnerHeader","spin$","cloneHttpHeaders","keys","forEach","append","reqMod","initial","language","theme","autoNightMode","nightTheme","stickyHeader","pageAnimations","pageAnimationsDisabled","elementsAnimations","hour","SETTINGS_KEY","SettingsService","router","overlayContainer","titleService","animationsService","ngZone","Date","getHours","_settings","settings$","asObservable","settings","setTranslateServiceLanguage","updateTheme","updateRouteAnimationType","modeNight","settingsNext","subscription","unsubscribe","runOutsideAngular","effectiveTheme","classList","getContainerElement","toRemove","Array","from","filter","item","includes","remove","add","lang","use","setTitle","routerState","snapshot","root","getValue","ProgressSpinnerComponent","AppComponent","settingsService","isIEorEdgeOrSafari","changeSetting","console","log","name","animations","TitleService","title","lazyTranslateService","lastChild","children","translate","translatedTitle","AppModule","register","enabled","registrationStrategy","SettingsPipe","atribute","NumbersOnlyDirective","_el","regex","RegExp","e","indexOf","keyCode","ctrlKey","metaKey","shiftKey","onKeyDown","AnimationsService","routeAnimationType","type","AuthGuardService","route","state","navigate","MaterialModule","provide","useValue","disableClose","hasBackdrop","providers","ProgressSpinnerService","overlay","spinnerTopRef","cdkSpinnerCreate","res","hasAttached","showSpinner","stopSpinner","events","navigationInterceptor","create","backdropClass","positionStrategy","global","centerHorizontally","centerVertically","attach","detach","AUTH_KEY","JWT","CURRENT_USER","ROLES","AuthManagementService","authDataService","_isAuthenticated","isAuthenticated$","_currentUser","_roles","roles$","currentUserNext","id","description","code","authenticate","isAuthenticatedNext","startRefreshTokenTimer","authenticateGoogle","stopRefreshTokenTimer","refreshToken","hasRoles","some","role","jwtToken","atob","split","expires","exp","timeout","getTime","now","refreshTokenTimeout","setTimeout","clearTimeout","ConnectionStatusEnum","NetworkConnection","init","online$","offline$","status","onLine","Online","Offline","httpLoaderFactory","initializerPwaService","pwaService","initPwaPrompt","initializerProgressSpinnerService","initProgressSpinnerService","googleLoginOptions","scope","CoreModule","parentModule","faIconLibrary","addIcons","useClass","multi","useFactory","deps","autoLogin","PROVIDER_ID","provider","forRoot","loader","MainComponent","authService","isProd","year","getFullYear","logo","languages","navigation","link","label","navigationSideMenu","isScrolling","sideconf","fixed","google","signOut","authLogout","scrollOffset","srcElement","scrollTop","eventoScroll","onLogoutClick","routes","path","redirectTo","pathMatch","loadChildren","then","m","LoginModule","component","SettingsModule","canActivate","ExamplesModule","AppRoutingModule","useHash","scrollPositionRestoration","preloadingStrategy","HttpErrorInterceptor","appErrorHandler","handleError","webpackEmptyAsyncContext","Promise","resolve","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Platform } from '@angular/cdk/platform';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { SwUpdate } from '@angular/service-worker';\nimport { Subject, timer } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { PromptComponent } from './components/prompt/prompt-component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PwaService implements OnDestroy {\n  private promptEvent: any;\n  /**\n   * Use to destroy and prevent memory leaks\n   */\n  private destroy$: Subject<void> = new Subject<void>();\n\n  constructor(\n    private bottomSheet: MatBottomSheet,\n    private platform: Platform,\n    private swUpdate: SwUpdate,\n    private translateService: TranslateService\n  ) {}\n\n  public initPwaPrompt() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate.available.pipe(take(1), takeUntil(this.destroy$)).subscribe(() => {\n        if (confirm(this.translateService.instant('aula-planeta.pwa.new-version'))) {\n          window.location.reload();\n        }\n      });\n    }\n\n    if (this.platform.ANDROID) {\n      window.addEventListener('beforeinstallprompt', (event: any) => {\n        event.preventDefault();\n        this.promptEvent = event;\n        this.openPromptComponent('android');\n      });\n    }\n    if (this.platform.IOS) {\n      const isInStandaloneMode = 'standalone' in window.navigator && window.navigator['standalone'];\n      if (!isInStandaloneMode) {\n        this.openPromptComponent('ios');\n      }\n    }\n  }\n\n  private openPromptComponent(mobileType: 'ios' | 'android') {\n    timer(3000)\n      .pipe(take(1))\n      .subscribe(() => this.bottomSheet.open(PromptComponent, { data: { mobileType, promptEvent: this.promptEvent } }));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import {\r\n  animate,\r\n  query,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  stagger,\r\n  sequence\r\n} from '@angular/animations';\r\nimport { AnimationsService } from './animations.service';\r\n\r\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\r\n\r\nconst STEPS_ALL: any[] = [\r\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\r\n    optional: true\r\n  }),\r\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\r\n    optional: true\r\n  }),\r\n  sequence([\r\n    query(\r\n      ':leave > *',\r\n      [\r\n        style({ transform: 'translateY(0%)', opacity: 1 }),\r\n        animate(\r\n          '0.2s ease-in-out',\r\n          style({ transform: 'translateY(-3%)', opacity: 0 })\r\n        ),\r\n        style({ position: 'fixed' })\r\n      ],\r\n      { optional: true }\r\n    ),\r\n    query(\r\n      ':enter > *',\r\n      [\r\n        style({\r\n          transform: 'translateY(-3%)',\r\n          opacity: 0,\r\n          position: 'static'\r\n        }),\r\n        animate(\r\n          '0.5s ease-in-out',\r\n          style({ transform: 'translateY(0%)', opacity: 1 })\r\n        )\r\n      ],\r\n      { optional: true }\r\n    )\r\n  ]),\r\n  query(\r\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\r\n    stagger(75, [\r\n      style({ transform: 'translateY(10%)', opacity: 0 }),\r\n      animate(\r\n        '0.5s ease-in-out',\r\n        style({ transform: 'translateY(0%)', opacity: 1 })\r\n      )\r\n    ]),\r\n    { optional: true }\r\n  )\r\n];\r\nconst STEPS_NONE = [];\r\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\r\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\r\n\r\nexport const routeAnimations = trigger('routeAnimations', [\r\n  transition(isRouteAnimationsAll, STEPS_ALL),\r\n  transition(isRouteAnimationsNone, STEPS_NONE),\r\n  transition(isRouteAnimationsPage, STEPS_PAGE),\r\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\r\n]);\r\n\r\nexport function isRouteAnimationsAll() {\r\n  return AnimationsService.isRouteAnimationsType('ALL');\r\n}\r\n\r\nexport function isRouteAnimationsNone() {\r\n  return AnimationsService.isRouteAnimationsType('NONE');\r\n}\r\n\r\nexport function isRouteAnimationsPage() {\r\n  return AnimationsService.isRouteAnimationsType('PAGE');\r\n}\r\n\r\nexport function isRouteAnimationsElements() {\r\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef, Input, OnInit } from '@angular/core';\r\nimport { AuthManagementService } from '../../auth/auth-management.service';\r\nimport { User } from '../../../shared/models/user.model';\r\n\r\n\r\n@Directive({\r\n  selector: '[hasPermission]'\r\n})\r\nexport class PermissionDirective implements OnInit {\r\n  /**\r\n   * Current user to inspect his privileges\r\n   */\r\n  private currentUser: User;\r\n  /**\r\n   * Privileges to analize\r\n   */\r\n  private privileges: string[] = [];\r\n  /**\r\n   * Operation to add conditional. OR / AND\r\n   */\r\n  logicalOperation: 'OR' | 'AND' = 'OR';\r\n  /**\r\n   * Determinates if viewContainer is hidden or not\r\n   */\r\n  private isHidden = true;\r\n  /**\r\n   * \r\n   * @param templateRef \r\n   * @param viewContainer \r\n   * @param applicationUserService \r\n   */\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    private authManagementService: AuthManagementService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authManagementService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      this.updateView();\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  set hasPermission(val) {\r\n    this.privileges = val;\r\n    this.updateView();\r\n  }\r\n  \r\n  @Input()\r\n  set hasPermissionOperation(permop) {\r\n    this.logicalOperation = permop;\r\n    this.updateView();\r\n  }\r\n\r\n  /**\r\n   * Update view if is needed based on user privileges\r\n   */\r\n  private updateView() {\r\n    if (this.checkPermission()) {\r\n      if(this.isHidden) {\r\n        this.viewContainer.createEmbeddedView(this.templateRef);\r\n        this.isHidden = false;\r\n      }\r\n    } else {\r\n      this.isHidden = true;\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check the user privileges if the operational\r\n   * @returns boolean if component must be renderized or not\r\n   */\r\n  private checkPermission(): boolean {\r\n    let hasPermission = false;\r\n    if (this.currentUser && this.currentUser.roles && this.currentUser.roles.length) {\r\n      for (const checkPrivilege of this.privileges) {\r\n        const permissionFound = this.authManagementService.userCan([checkPrivilege]);\r\n        if (permissionFound) {\r\n          hasPermission = true;\r\n          if (this.logicalOperation === 'OR') {\r\n            break;\r\n          }\r\n        } else {\r\n          hasPermission = false;\r\n          if (this.logicalOperation === 'AND') {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return hasPermission;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NumbersOnlyDirective } from './numbers-only/numbers-only.directive';\r\nimport { UppercaseDirective } from './uppercase/uppercase.directive';\r\nimport { PermissionDirective } from './permission/permission.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NumbersOnlyDirective,\r\n    UppercaseDirective,\r\n    PermissionDirective\r\n  ],\r\n  exports: [\r\n    NumbersOnlyDirective,\r\n    UppercaseDirective,\r\n    PermissionDirective\r\n  ]\r\n})\r\nexport class DirectivesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../../shared/models/user.model';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthDataService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public authenticate(email: string, password: string): Observable<any> {\r\n    return this.http.post<any>(`${environment.apiUrl}/login`, { email, password });\r\n  }\r\n\r\n  public authenticateGoogle(tokenGoogle: string): Observable<any> {\r\n    return this.http.post<any>(`${environment.apiUrl}/login/google`, { token: tokenGoogle });\r\n  }\r\n\r\n  public logout(): Observable<User> {\r\n    return this.http.post<any>(`${environment.apiUrl}/login/revoke`, {}, { withCredentials: true });\r\n  }\r\n\r\n  public refreshToken() {\r\n    return this.http.post<any>(`${environment.apiUrl}/login/refresh`, {}, { withCredentials: true });\r\n  }\r\n\r\n  /**\r\n   * Get user\r\n   * @param User User to register\r\n   */\r\n  public register(user: User): Observable<any> {\r\n    return this.http.post<any>(`${environment.apiUrl}/users/register`, user);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Self, HostListener, Renderer2 } from '@angular/core';\r\nimport { A, Z } from '@angular/cdk/keycodes';\r\n@Directive({\r\n  selector: '[uppercase]',\r\n  host: {\r\n    '(input)': '$event'\r\n  }\r\n})\r\nexport class UppercaseDirective {\r\n  lastValue: string;\r\n  constructor(\r\n    @Self() private ref: ElementRef\r\n  ) { }\r\n\r\n  /** Handle keyboard letter to uppercase it */\r\n  @HostListener('input', ['$event']) onInput($event) \r\n  {\r\n    var start = $event.target.selectionStart;\r\n    var end = $event.target.selectionEnd;\r\n    $event.target.value = $event.target.value.toUpperCase();\r\n    $event.target.setSelectionRange(start, end);\r\n    $event.preventDefault();\r\n\r\n    if (!this.lastValue || (this.lastValue && $event.target.value.length > 0 && this.lastValue !== $event.target.value)) {\r\n      this.lastValue = this.ref.nativeElement.value = $event.target.value;\r\n      // Propagation\r\n      const evt = document.createEvent('HTMLEvents');\r\n      evt.initEvent('input', false, true);\r\n      event.target.dispatchEvent(evt);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'aula-planeta-prompt',\n  templateUrl: './prompt-component.html',\n  styleUrls: [ './prompt-component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PromptComponent {\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: { mobileType: 'ios' | 'android'; promptEvent?: any },\n    private bottomSheetRef: MatBottomSheetRef<PromptComponent>\n  ) // private translateService: TranslateService,\n  {\n  }\n\n  public installPwa(): void {\n    this.data.promptEvent.prompt();\n    this.close();\n  }\n\n  public close() {\n    this.bottomSheetRef.dismiss();\n  }\n}\n","\n<mat-toolbar *ngIf=\"data.mobileType === 'android'\" color=\"primary\" class=\"android-prompt\">\n    <button mat-button (click)=\"installPwa()\">\n    {{'aula-planeta.pwa.android' | translate}}\n    </button>\n    <button mat-icon-button (click)=\"close()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-toolbar>\n  \n  <div *ngIf=\"data.mobileType === 'ios'\" class=\"ios-prompt\">\n    <button class=\"close-ios-inv\" mat-button color=\"primary\" (click)=\"close()\"><mat-icon>close</mat-icon></button>\n    <div>{{'aula-planeta.pwa.ios' | translate}}</div>\n    <div><img [src]=\"'./assets/ios-menu-btn.png'\"> <mat-icon>navigate_next</mat-icon> <img [src]=\"'./assets/ios-add-btn.png'\"></div>\n  </div>","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthManagementService } from '../auth/auth-management.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  private authManagementService: AuthManagementService;\r\n  private localStorageService: LocalStorageService;\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // add authorization header with jwt token if available\r\n    this.authManagementService = this.injector.get(AuthManagementService);\r\n    this.localStorageService = this.injector.get(LocalStorageService);\r\n\r\n    const currentUser = this.authManagementService.currentUser;\r\n    const isAuthenticated = this.authManagementService.isAuthenticated;\r\n\r\n    const isLoggedIn = currentUser && isAuthenticated;\r\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n    if (isLoggedIn && isApiUrl) {\r\n      request = request.clone({\r\n        setHeaders: { 'x-token': `${this.localStorageService.getItem('JWT')}` }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nconst packageJson = require('../../../../package.json');\r\n\r\nexport const environment = {\r\n  appName: 'Aula Planeta',\r\n  envName: 'DEV',\r\n  production: false,\r\n  test: false,\r\n  apiUrl: 'https://aula-node-backend.herokuapp.com/api',\r\n  GOOGLE_ID: '926325069712-jotjgejnsjlgb1rcjrfolmd7kohdvtv5.apps.googleusercontent.com',\r\n  GOOGLE_SECRET: '_-1RPoeQfuLpZBo-F4I1yyhN',\r\n  i18nPrefix: '',\r\n  versions: {\r\n    app: packageJson.version,\r\n    angular: packageJson.dependencies['@angular/core'],\r\n    ngrx: packageJson.dependencies['@ngrx/store'],\r\n    material: packageJson.dependencies['@angular/material'],\r\n    bootstrap: packageJson.dependencies.bootstrap,\r\n    rxjs: packageJson.dependencies.rxjs,\r\n    ngxtranslate: packageJson.dependencies['@ngx-translate/core'],\r\n    fontAwesome: packageJson.dependencies['@fortawesome/fontawesome-free'],\r\n    angularCli: packageJson.devDependencies['@angular/cli'],\r\n    typescript: packageJson.devDependencies['typescript'],\r\n    cypress: packageJson.devDependencies['cypress'],\r\n    eslint: packageJson.devDependencies['eslint']\r\n  }\r\n};\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { NotificationService } from '../notifications/notification.service';\r\n\r\n/** Application-wide error handler that adds a UI notification to the error handling\r\n * provided by the default Angular ErrorHandler.\r\n */\r\n@Injectable()\r\nexport class AppErrorHandler extends ErrorHandler {\r\n  constructor(private notificationsService: NotificationService) {\r\n    super();\r\n  }\r\n\r\n  handleError(error: Error | HttpErrorResponse | any) {\r\n    // let displayMessage = 'An error occurred.';\r\n\r\n    // if (!environment.production) {\r\n    //   displayMessage += ' See console for details.';\r\n    // }\r\n\r\n    // this.notificationsService.error(displayMessage);\r\n    const err = (error && error.error && error.error.message) || error.statusText;\r\n    this.notificationsService.error(err);\r\n\r\n    super.handleError(error);\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  constructor(\r\n    private readonly snackBar: MatSnackBar,\r\n    private readonly zone: NgZone\r\n  ) {}\r\n\r\n  default(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'default-notification-overlay'\r\n    });\r\n  }\r\n\r\n  info(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'info-notification-overlay'\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'success-notification-overlay'\r\n    });\r\n  }\r\n\r\n  warn(message: string) {\r\n    this.show(message, {\r\n      duration: 2500,\r\n      panelClass: 'warning-notification-overlay'\r\n    });\r\n  }\r\n\r\n  error(message: string) {\r\n    this.show(message, {\r\n      duration: 3000,\r\n      panelClass: 'error-notification-overlay'\r\n    });\r\n  }\r\n\r\n  private show(message: string, configuration: MatSnackBarConfig) {\r\n    // Need to open snackBar from Angular zone to prevent issues with its position per\r\n    // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material\r\n    this.zone.run(() => this.snackBar.open(message, null, configuration));\r\n  }\r\n}\r\n","export const NIGHT_MODE_THEME = 'black-theme';\r\n\r\nexport type Language = 'en' | 'sk' | 'de' | 'fr' | 'es' | 'pt-br' | 'he';\r\n\r\nexport interface Settings {\r\n  language: string;\r\n  theme: string;\r\n  autoNightMode: boolean;\r\n  nightTheme: string;\r\n  stickyHeader: boolean;\r\n  pageAnimations: boolean;\r\n  pageAnimationsDisabled: boolean;\r\n  elementsAnimations: boolean;\r\n  hour: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst APP_PREFIX = 'aula-planeta-';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  constructor() {}\r\n\r\n  setItem(key: string, value: any) {\r\n    if (value) {\r\n      localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\r\n    } else {\r\n      localStorage.removeItem(`${APP_PREFIX}${key}`);\r\n    }\r\n  }\r\n\r\n  getItem(key: string) {\r\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\r\n  }\r\n\r\n  /** Tests that localStorage exists, can be written to, and read from. */\r\n  testLocalStorage() {\r\n    const testValue = 'testValue';\r\n    const testKey = 'testKey';\r\n    const errorMessage = 'localStorage did not return expected value';\r\n\r\n    this.setItem(testKey, testValue);\r\n    const retrievedValue = this.getItem(testKey);\r\n    this.removeItem(testKey);\r\n\r\n    if (retrievedValue !== testValue) {\r\n      throw new Error(errorMessage);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ProgressSpinnerService } from '../progress-spinner/progress-spinner.service';\r\n\r\nconst NO_SPINNER_LOADING_HEADER = 'NO_LOADER';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingInterceptor {\r\n  activeRequests: number = 0;\r\n\r\n  private progressSpinnerService: ProgressSpinnerService;\r\n\r\n  constructor(private injector: Injector) {\r\n    this.progressSpinnerService = this.injector.get(ProgressSpinnerService);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.headers.has(NO_SPINNER_LOADING_HEADER)) {\r\n      req = this.clearNoSpinnerHeader(req);\r\n      return next.handle(req);\r\n    } else {\r\n      this.activeRequests++;\r\n      this.progressSpinnerService.spin$.next(true);\r\n\r\n      return next.handle(req).pipe(\r\n        finalize(() => {\r\n          this.activeRequests--;\r\n          if (this.activeRequests === 0) {\r\n            this.progressSpinnerService.spin$.next(false);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate over httpHeaders from request and delete the NO_LOADER header\r\n   * @param req Request to analize\r\n   */\r\n  private clearNoSpinnerHeader(req: HttpRequest<any>): HttpRequest<any> {\r\n    let cloneHttpHeaders: HttpHeaders = new HttpHeaders();\r\n    req.headers.keys().forEach((key: string) => {\r\n      if (key !== NO_SPINNER_LOADING_HEADER) {\r\n        cloneHttpHeaders = cloneHttpHeaders.append(key, req.headers.get(key));\r\n      }\r\n    });\r\n    const reqMod = req.clone({\r\n      headers: cloneHttpHeaders\r\n    });\r\n    return reqMod;\r\n  }\r\n}\r\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Subscription, interval } from 'rxjs';\r\nimport { NIGHT_MODE_THEME, Settings } from '../../shared/models/settings.model';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { Router } from '@angular/router';\r\nimport { TitleService } from '../title/title.service';\r\nimport { AnimationsService } from '../core.module';\r\n\r\nexport const initial: Settings = {\r\n  language: 'es',\r\n  theme: 'default-theme',\r\n  autoNightMode: false,\r\n  nightTheme: NIGHT_MODE_THEME,\r\n  stickyHeader: true,\r\n  pageAnimations: false,\r\n  pageAnimationsDisabled: false,\r\n  elementsAnimations: false,\r\n  hour: 0\r\n};\r\n\r\nexport const SETTINGS_KEY = 'SETTINGS';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService implements OnDestroy {\r\n  private subscription: Subscription;\r\n  hour = new Date().getHours();\r\n  /**\r\n   * Contains the SomeThink list\r\n   */\r\n  private _settings: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  settings$ = this._settings.asObservable();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private overlayContainer: OverlayContainer,\r\n    private localStorageService: LocalStorageService,\r\n    private titleService: TitleService,\r\n    private animationsService: AnimationsService,\r\n    private translateService: TranslateService,\r\n    private ngZone: NgZone\r\n  ) {\r\n    let settings = this.localStorageService.getItem(SETTINGS_KEY);\r\n    settings = settings ? settings : initial;\r\n    this.setTranslateServiceLanguage(settings.language);\r\n    this.updateTheme(settings.theme);\r\n    this.updateRouteAnimationType(settings.pageAnimations, settings.elementsAnimations);\r\n    this.modeNight();\r\n    this.settingsNext(settings);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  get settings() {\r\n    return this._settings.getValue();\r\n  }\r\n\r\n  modeNight() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.subscription = interval(60000).subscribe(() => {\r\n        const hour = new Date().getHours();\r\n        if (hour !== this.hour) {\r\n          this.hour = hour;\r\n          this.ngZone.run(() => {\r\n            if (this.settings.autoNightMode && (hour >= 21 || hour <= 7)) {\r\n              this.settingsNext({ ...this.settings });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update setting\r\n   * @param key Name atribute setting\r\n   * @param value Value os atribute\r\n   */\r\n  changeSetting(key: string, value: any) {\r\n    const { pageAnimations, elementsAnimations } = this.settings;\r\n    switch (key) {\r\n      case 'theme':\r\n        this.updateTheme(value);\r\n        break;\r\n      case 'language':\r\n        this.setTranslateServiceLanguage(value);\r\n        break;\r\n      case 'pageAnimations':\r\n        this.updateRouteAnimationType(!pageAnimations, elementsAnimations);\r\n      case 'elementsAnimations':\r\n        this.updateRouteAnimationType(pageAnimations, !elementsAnimations);\r\n        break;\r\n    }\r\n    this.settingsNext({ ...this.settings, [key]: value });\r\n  }\r\n\r\n  private updateTheme(effectiveTheme: string) {\r\n    const classList = this.overlayContainer.getContainerElement().classList;\r\n    const toRemove = Array.from(classList).filter((item: string) => item.includes('-theme'));\r\n    if (toRemove.length) {\r\n      classList.remove(...toRemove);\r\n    }\r\n    classList.add(effectiveTheme);\r\n  }\r\n\r\n  private updateRouteAnimationType(pageAnimations, elementsAnimations) {\r\n    this.animationsService.updateRouteAnimationType(pageAnimations, elementsAnimations);\r\n  }\r\n\r\n  private setTranslateServiceLanguage(lang: string) {\r\n    this.translateService.use(lang);\r\n    this.titleService.setTitle(this.router.routerState.snapshot.root, this.translateService);\r\n  }\r\n\r\n  /**\r\n   * Emit a settings\r\n   * @param SomeThink\r\n   */\r\n  private settingsNext(settings: Settings) {\r\n    this.localStorageService.setItem(SETTINGS_KEY, settings);\r\n    this._settings.next(settings);\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aula-planeta-progress-spinner',\r\n  templateUrl: './progress-spinner.component.html',\r\n  styleUrls: ['./progress-spinner.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProgressSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"app-loading\" aria-label=\"Cargando\">\r\n    <mat-spinner color=\"accent\" diameter=\"80\" aria-label=\"Icono Cargando 1\"></mat-spinner>\r\n    <mat-spinner color=\"accent\" diameter=\"40\" aria-label=\"Icono Cargando 2\"></mat-spinner>\r\n    <mat-spinner color=\"accent\" diameter=\"20\" aria-label=\"Icono Cargando 3\"></mat-spinner>\r\n</div>","import browser from 'browser-detect';\r\nimport { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { SettingsService } from './core/settings/settings.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { routeAnimations } from './core/core.module';\r\n\r\n@Component({\r\n  selector: 'aula-planeta-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.scss' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [ routeAnimations ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(public settingsService: SettingsService, private translateService: TranslateService) {}\r\n\r\n  private static isIEorEdgeOrSafari() {\r\n    console.log('browser name:', browser().name);\r\n    return [ 'ie', 'edge', 'safari' ].includes(browser().name);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.translateService.use('es');\r\n    if (AppComponent.isIEorEdgeOrSafari()) {\r\n      this.settingsService.changeSetting('pageAnimationsDisabled', true);\r\n    }\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Title } from '@angular/platform-browser';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { environment as env } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TitleService {\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private title: Title\r\n  ) {}\r\n\r\n  setTitle(\r\n    snapshot: ActivatedRouteSnapshot,\r\n    lazyTranslateService?: TranslateService\r\n  ) {\r\n    let lastChild = snapshot;\r\n    while (lastChild.children.length) {\r\n      lastChild = lastChild.children[0];\r\n    }\r\n    const { title } = lastChild.data;\r\n    const translate = lazyTranslateService || this.translateService;\r\n    if (title) {\r\n      translate\r\n        .get(title)\r\n        .pipe(filter((translatedTitle) => translatedTitle !== title))\r\n        .subscribe((translatedTitle) =>\r\n          this.title.setTitle(`${translatedTitle} - ${env.appName}`)\r\n        );\r\n    } else {\r\n      this.title.setTitle(env.appName);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\nimport { CoreModule } from './core/core.module';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SettingsPipe } from './services/data/pipes/settings.pipe';\r\n\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { MainComponent } from './features/main/main.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n\r\n    // core\r\n    CoreModule,\r\n\r\n    MaterialModule,\r\n\r\n    // app\r\n    AppRoutingModule,\r\n\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n      registrationStrategy: 'registerImmediately'\r\n    })\r\n  ],\r\n  declarations: [ AppComponent, SettingsPipe, MainComponent ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Settings } from '../../../shared/models/settings.model';\r\n\r\n@Pipe({\r\n  name: 'settings'\r\n})\r\nexport class SettingsPipe implements PipeTransform {\r\n  transform(settings: Settings, atribute: string): unknown {\r\n    const hour = new Date().getHours();\r\n    if (atribute === 'theme' && settings.autoNightMode) {\r\n      return (hour >= 21 || hour <= 7) ? settings.nightTheme : settings.theme\r\n    } else {\r\n      return settings[atribute];\r\n    } \r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[numbersOnly]'\r\n})\r\nexport class NumbersOnlyDirective {\r\n  private regex: RegExp = new RegExp(/[^0-9]*$/g);\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(e: KeyboardEvent) {\r\n    if (\r\n      // Allow: Delete, Backspace, Tab, Escape, Enter\r\n      [46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 ||\r\n      (e.keyCode === 65 && e.ctrlKey === true) || // Allow: Ctrl+A\r\n      (e.keyCode === 67 && e.ctrlKey === true) || // Allow: Ctrl+C\r\n      (e.keyCode === 86 && e.ctrlKey === true) || // Allow: Ctrl+V\r\n      (e.keyCode === 88 && e.ctrlKey === true) || // Allow: Ctrl+X\r\n      (e.keyCode === 65 && e.metaKey === true) || // Cmd+A (Mac)\r\n      (e.keyCode === 67 && e.metaKey === true) || // Cmd+C (Mac)\r\n      (e.keyCode === 86 && e.metaKey === true) || // Cmd+V (Mac)\r\n      (e.keyCode === 88 && e.metaKey === true) || // Cmd+X (Mac)\r\n      (e.keyCode >= 35 && e.keyCode <= 39) // Home, End, Left, Right\r\n    ) {\r\n      return;  // let it happen, don't do anything\r\n    }\r\n    // Ensure that it is a number and stop the keypress\r\n    if (\r\n      (e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&\r\n      (e.keyCode < 96 || e.keyCode > 105)\r\n    ) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnimationsService {\r\n  private static routeAnimationType: RouteAnimationType = 'NONE';\r\n\r\n  constructor() {\r\n    AnimationsService.routeAnimationType = 'NONE';\r\n  }\r\n\r\n  static isRouteAnimationsType(type: RouteAnimationType) {\r\n    return AnimationsService.routeAnimationType === type;\r\n  }\r\n\r\n  updateRouteAnimationType(\r\n    pageAnimations: boolean,\r\n    elementsAnimations: boolean\r\n  ) {\r\n    AnimationsService.routeAnimationType =\r\n      pageAnimations && elementsAnimations\r\n        ? 'ALL'\r\n        : pageAnimations\r\n        ? 'PAGE'\r\n        : elementsAnimations\r\n        ? 'ELEMENTS'\r\n        : 'NONE';\r\n  }\r\n}\r\n\r\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\r\n","export default __webpack_public_path__ + \"logo_PLANETA72x72.png\";","import { forwardRef, Inject, Injectable, Injector } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthManagementService } from './auth-management.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n  private authManagementService: AuthManagementService;\r\n  constructor(private injector: Injector, private router: Router, private snackBar: MatSnackBar) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    this.authManagementService = this.injector.get(AuthManagementService);\r\n    if (this.authManagementService.currentUser) {\r\n      if (route.data.roles && !this.authManagementService.userCan(route.data.roles)) {\r\n        this.snackBar.open('No tienes privilegios', 'OK', {\r\n          duration: 2000\r\n        });\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate([ '/login' ]);\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatPaginatorModule,\r\n    MatBottomSheetModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { disableClose: true, hasBackdrop: true } },\r\n    { provide: MAT_DATE_LOCALE, useValue: 'es-ES' }\r\n  ],\r\n  exports: [\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatPaginatorModule,\r\n    MatBottomSheetModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Injectable, OnDestroy, Injector, OnInit } from '@angular/core';\r\n\r\n//cdk\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\n\r\n//rxjs\r\nimport { Subject } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ProgressSpinnerComponent } from './progress-spinner.component';\r\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgressSpinnerService implements OnDestroy {\r\n  private overlay: Overlay;\r\n  private router: Router;\r\n  public spin$: Subject<Boolean> = new Subject();\r\n\r\n  /**\r\n   * Use to destroy and prevent memory leaks\r\n   */\r\n  private destroy$: Subject<void> = new Subject<void>();\r\n  private spinnerTopRef;\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  public initProgressSpinnerService() {\r\n    this.overlay = this.injector.get(Overlay);\r\n    this.spinnerTopRef = this.cdkSpinnerCreate();\r\n\r\n    this.spin$.asObservable().pipe(map((val) => (val ? true : false))).subscribe((res) => {\r\n      if (res && !this.spinnerTopRef.hasAttached()) {\r\n        this.showSpinner();\r\n      } else if (!res && this.spinnerTopRef.hasAttached()) {\r\n        this.stopSpinner();\r\n      }\r\n    });\r\n\r\n    if (this.router) {\r\n      this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\r\n        this.navigationInterceptor(event);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Shows and hides the loading spinner during RouterEvent changes\r\n  public navigationInterceptor(event): void {\r\n    if (event instanceof NavigationStart) {\r\n      this.spin$.next(true);\r\n    }\r\n\r\n    if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\r\n      this.spin$.next(false);\r\n    }\r\n  }\r\n\r\n  private cdkSpinnerCreate() {\r\n    return this.overlay.create({\r\n      hasBackdrop: true,\r\n      backdropClass: 'dark-backdrop',\r\n      positionStrategy: this.overlay.position().global().centerHorizontally().centerVertically()\r\n    });\r\n  }\r\n\r\n  private showSpinner() {\r\n    this.spinnerTopRef.attach(new ComponentPortal(ProgressSpinnerComponent));\r\n  }\r\n\r\n  private stopSpinner() {\r\n    this.spinnerTopRef.detach();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from '../../shared/models/user.model';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\nimport { Role } from '../../shared/models/role.model';\r\nimport { AuthDataService } from './auth-data.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SocialAuthService } from 'angularx-social-login';\r\nimport { MicrosoftLoginProvider, GoogleLoginProvider } from 'angularx-social-login';\r\n\r\n\r\nexport const AUTH_KEY = 'AUTH';\r\nexport const JWT = 'JWT';\r\nexport const CURRENT_USER = 'CURRENT_USER';\r\nexport const ROLES = 'ROLES';\r\n\r\nexport interface AuthState {\r\n  isAuthenticated: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthManagementService {\r\n  /**\r\n   * Contains the isAuthenticated \r\n   */\r\n  private _isAuthenticated: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  isAuthenticated$ = this._isAuthenticated.asObservable();\r\n\r\n  /**\r\n   * Contains the isAuthenticated \r\n   */\r\n  private _currentUser: BehaviorSubject<User> = new BehaviorSubject(null);\r\n  public currentUser$ = this._currentUser.asObservable();\r\n\r\n  /**\r\n   * Contains the isAuthenticated \r\n   */\r\n  private _roles: BehaviorSubject<Role[]> = new BehaviorSubject(null);\r\n  public roles$ = this._roles.asObservable();\r\n\r\n\r\n  constructor(\r\n    private localStorageService: LocalStorageService,\r\n    private authDataService: AuthDataService\r\n  ) {\r\n    const currentUser: User = this.localStorageService.getItem(CURRENT_USER);\r\n    this.currentUserNext(currentUser);\r\n\r\n    const roles: Role[] = this.localStorageService.getItem(ROLES);\r\n    this.roles =\r\n      roles && roles.length > 0\r\n        ? roles\r\n        : [\r\n          {\r\n            id: 0,\r\n            description: 'Alumno',\r\n            code: 'ALUMNO'\r\n          },\r\n          {\r\n            id: 1,\r\n            description: 'Profesor',\r\n            code: 'PROFESOR'\r\n          }\r\n        ];\r\n  }\r\n\r\n  /**\r\n   * getter currentUser\r\n   */\r\n  get currentUser() {\r\n    return this._currentUser.getValue();\r\n  }\r\n\r\n  /**\r\n   * Register\r\n   */\r\n  register(user: User) {\r\n    return this.authDataService.register(user).pipe(\r\n      map((data) => {\r\n        this.localStorageService.setItem(JWT, data.token)\r\n        return data.user;\r\n\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Login\r\n   */\r\n  authLogin(email: string, password: string) {\r\n    return this.authDataService.authenticate(email, password).pipe(\r\n      map((data) => {\r\n        this.currentUserNext(data.user);\r\n        this.isAuthenticatedNext(true);\r\n        this.startRefreshTokenTimer();\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * LoginGoogleUser\r\n   */\r\n  authLoginGoogle(tokenGoogle: string) {\r\n    return this.authDataService.authenticateGoogle(tokenGoogle).pipe(\r\n      map((data) => {\r\n        this.localStorageService.setItem(JWT, data.token)\r\n        this.currentUserNext(data.user);\r\n        this.isAuthenticatedNext(true);\r\n        this.startRefreshTokenTimer();\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Logout\r\n   */\r\n  authLogout() {\r\n    this.currentUserNext(null);\r\n    this.isAuthenticatedNext(false);\r\n    this.stopRefreshTokenTimer();\r\n    // this.authDataService.logout().subscribe();\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.authDataService.refreshToken().pipe(\r\n      map((user) => {\r\n        this.currentUserNext(user);\r\n        this.startRefreshTokenTimer();\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Check if user has roles\r\n   * @param hasRoles \r\n   */\r\n  userCan(hasRoles: string[]): boolean {\r\n    return hasRoles.some((role) => {\r\n      return this.currentUser.roles = role;\r\n      // return this.currentUser.roles.some((currentRole) => {\r\n      //   return currentRole.code === role;\r\n      // });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * getter isAuthenticated\r\n   */\r\n  public get isAuthenticated() {\r\n    return this._isAuthenticated.getValue();\r\n  }\r\n\r\n  /**\r\n   * getter roles\r\n   */\r\n  private get roles() {\r\n    return this._roles.getValue();\r\n  }\r\n\r\n  /**\r\n   * Emit a roles\r\n   * @param roles\r\n   */\r\n  private set roles(roles: Role[]) {\r\n    this._roles.next(roles);\r\n    this.localStorageService.setItem(ROLES, roles);\r\n  }\r\n\r\n  /**\r\n   * Emit a isAuthenticated\r\n   * @param isAuthenticated\r\n   */\r\n  private isAuthenticatedNext(isAuthenticated: boolean) {\r\n    this._isAuthenticated.next(isAuthenticated);\r\n    this.localStorageService.setItem(AUTH_KEY, { isAuthenticated });\r\n  }\r\n\r\n  /**\r\n   * Emit a user\r\n   * @param user\r\n   */\r\n  private currentUserNext(user: User) {\r\n    this._currentUser.next(user);\r\n    this.localStorageService.setItem(CURRENT_USER, user);\r\n  }\r\n\r\n  private refreshTokenTimeout;\r\n\r\n  private startRefreshTokenTimer() {\r\n    // parse json object from base64 encoded jwt token\r\n    const jwtToken = JSON.parse(atob(this.localStorageService.getItem(JWT).split('.')[1]));\r\n\r\n    // set a timeout to refresh the token a minute before it expires\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(() => this.refreshToken().subscribe(), timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { fromEvent, Observable } from 'rxjs';\n\nexport enum ConnectionStatusEnum {\n  Online,\n  Offline\n}\n\nexport class NetworkConnection {\n\n  public static status: ConnectionStatusEnum = ConnectionStatusEnum.Online;\n  private static online$: Observable<Event>;\n  private static offline$: Observable<Event>;\n\n  public static init() {\n    NetworkConnection.online$ = fromEvent(window, 'online');\n    NetworkConnection.offline$ = fromEvent(window, 'offline');\n\n    NetworkConnection.status = navigator.onLine ? 0 : 1;\n\n    NetworkConnection.online$.subscribe(e => {\n      console.log('Online');\n      NetworkConnection.status = ConnectionStatusEnum.Online;\n    });\n\n    NetworkConnection.offline$.subscribe(e => {\n      console.log('Offline');\n      NetworkConnection.status = ConnectionStatusEnum.Offline;\n    });\n  }\n\n  constructor() {\n    NetworkConnection.init();\n  }\n\n}\n\nnew NetworkConnection();","import { CommonModule } from '@angular/common';\r\nimport { NgModule, Optional, SkipSelf, ErrorHandler, APP_INITIALIZER } from '@angular/core';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { FaIconLibrary, FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport { TitleService } from './title/title.service';\r\nimport { ROUTE_ANIMATIONS_ELEMENTS, routeAnimations } from './animations/route.animations';\r\nimport { AnimationsService } from './animations/animations.service';\r\nimport { AppErrorHandler } from './error-handler/app-error-handler.service';\r\nimport { LocalStorageService } from './local-storage/local-storage.service';\r\nimport { HttpErrorInterceptor } from './http-interceptors/http-error.interceptor';\r\nimport { LoadingInterceptor } from './http-interceptors/loading.interceptor';\r\nimport { NotificationService } from './notifications/notification.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { faCog, faBars, faRocket, faPowerOff, faUserCircle, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub, faMediumM, faTwitter, faInstagram, faYoutube } from '@fortawesome/free-brands-svg-icons';\r\nimport { JwtInterceptor } from './http-interceptors/jwt.interceptor';\r\nimport { AuthManagementService } from './auth/auth-management.service';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { DirectivesModule } from './directives/directives.module';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { RouteReuseService } from './router-reuse/router-reuse.service';\r\nimport { PwaService } from './pwa/pwa.service';\r\nimport { PromptComponent } from './pwa/components/prompt/prompt-component';\r\nimport { ProgressSpinnerService } from './progress-spinner/progress-spinner.service';\r\nimport { ProgressSpinnerComponent } from './progress-spinner/progress-spinner.component';\r\nimport { GoogleLoginProvider, MicrosoftLoginProvider, SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\nimport { NetworkConnection } from './network-connection/network-connection.service';\r\n\r\nexport {\r\n  TitleService,\r\n  routeAnimations,\r\n  LocalStorageService,\r\n  ROUTE_ANIMATIONS_ELEMENTS,\r\n  AnimationsService,\r\n  AuthManagementService,\r\n  NotificationService\r\n};\r\n\r\nexport function httpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, `${environment.i18nPrefix}/assets/i18n/`, '.json');\r\n}\r\n\r\nconst initializerPwaService = (pwaService: PwaService) => () => pwaService.initPwaPrompt();\r\nconst initializerProgressSpinnerService = (progressSpinnerService: ProgressSpinnerService) => () =>\r\n  progressSpinnerService.initProgressSpinnerService();\r\n\r\nconst googleLoginOptions = {\r\n  scope: 'profile email openid'\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n\r\n    // material\r\n    MaterialModule,\r\n\r\n    DirectivesModule,\r\n\r\n    SocialLoginModule,\r\n\r\n    // 3rd party\r\n    FontAwesomeModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  declarations: [PromptComponent, ProgressSpinnerComponent],\r\n  providers: [\r\n    NetworkConnection,\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: ErrorHandler, useClass: AppErrorHandler },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializerPwaService,\r\n      deps: [PwaService],\r\n      multi: true\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializerProgressSpinnerService,\r\n      deps: [ProgressSpinnerService],\r\n      multi: true\r\n    },\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\r\n              environment.GOOGLE_ID, googleLoginOptions\r\n            )\r\n          },\r\n          {\r\n            id: MicrosoftLoginProvider.PROVIDER_ID,\r\n            provider: new MicrosoftLoginProvider('clientId')\r\n          }\r\n        ]\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n\r\n    // { provide: RouteReuseStrategy, useClass: RouteReuseService }\r\n  ],\r\n  exports: [\r\n    // angular\r\n    FormsModule,\r\n\r\n    // material\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    DirectivesModule,\r\n\r\n    // 3rd party\r\n    FontAwesomeModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    parentModule: CoreModule,\r\n    faIconLibrary: FaIconLibrary\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\r\n    }\r\n    faIconLibrary.addIcons(\r\n      faCog,\r\n      faBars,\r\n      faRocket,\r\n      faPowerOff,\r\n      faUserCircle,\r\n      faPlayCircle,\r\n      faGithub,\r\n      faMediumM,\r\n      faTwitter,\r\n      faInstagram,\r\n      faYoutube\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, HostListener } from '@angular/core';\r\nimport { AuthManagementService } from '../../core/auth/auth-management.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { SettingsService } from '../../core/settings/settings.service';\r\nimport { environment as env } from '../../../environments/environment';\r\nimport { Settings } from '../../shared/models/settings.model';\r\nimport { routeAnimations } from '../../core/animations/route.animations';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../shared/models/user.model';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { SocialAuthService } from 'angularx-social-login';\r\n\r\n@Component({\r\n  selector: 'aula-planeta-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [routeAnimations]\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n  isProd = env.production;\r\n  envName = env.envName;\r\n  version = env.versions.app;\r\n  year = new Date().getFullYear();\r\n  logo = require('../../../assets/logo_PLANETA72x72.png').default;\r\n  languages = ['en', 'de', 'sk', 'fr', 'es', 'pt-br', 'zh-cn', 'he'];\r\n  navigation = [{ link: 'examples', label: 'aula-planeta.menu.examples' }];\r\n  navigationSideMenu = [...this.navigation, { link: 'settings', label: 'aula-planeta.menu.settings' }];\r\n  isScrolling = false;\r\n\r\n  sideconf = {\r\n    fixed: false,\r\n    open: true\r\n  };\r\n\r\n  settings$: Observable<Settings>;\r\n\r\n  private destroy$: Subject<void> = new Subject<void>();\r\n\r\n  user: User;\r\n\r\n  constructor(\r\n    public authManagementService: AuthManagementService,\r\n    private authService: SocialAuthService,\r\n    public settingsService: SettingsService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authManagementService.currentUser$.pipe(take(1), takeUntil(this.destroy$)).subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.router.navigate(['/login']);\r\n    if (this.user.google) {\r\n      this.authService.signOut();\r\n    }\r\n    this.authManagementService.authLogout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  eventoScroll($event) {\r\n    let scrollOffset = $event.srcElement.children[0].scrollTop;\r\n    this.isScrolling = scrollOffset > 0 ? true : false;\r\n  }\r\n}\r\n","<div [class]=\"'theme-wrapper ' + (settingsService.settings$  | async | settings: 'theme')\">\r\n    <div class=\"wrapper\">\r\n\r\n        <header role=\"heading\" class=\"toolbar\" [style.position]=\"(settingsService.settings$  | async | settings: 'stickyHeader') ? 'fixed' : 'inherit'\" (window.scroll)=\"eventoScroll($event)\" [class.mat-elevation-z3]=\"isScrolling\">\r\n\r\n            <mat-toolbar color=\"primary\">\r\n\r\n                <button role=\"button\" mat-icon-button aria-label=\"Menú\" (click)=\"sidenav.toggle()\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button>\r\n\r\n                <span class=\"spacer d-inline\">aulaPlaneta</span>\r\n\r\n                <button id=\"toolbarUserMenu\" role=\"button\" aria-label=\"Menú de usuario\" mat-button [matMenuTriggerFor]=\"toolbarUserMenu\">\r\n                    <mat-icon class=\"mr-0 mr-sm-2\">account_circle</mat-icon>\r\n                    <span *ngIf=\"user\" class=\"d-none d-sm-inline\">Hola, {{user.firstName}} {{user.lastName}}</span>\r\n                </button>\r\n                \r\n\r\n                <mat-menu #toolbarUserMenu=\"matMenu\">\r\n                    <button role=\"button\" mat-menu-item routerLink=\"settings\">\r\n                        <mat-icon>settings</mat-icon>\r\n                        <span>{{ 'aula-planeta.menu.settings' | translate }}</span>\r\n                    </button>\r\n                    <button role=\"button\" mat-menu-item (click)=\"onLogoutClick()\">\r\n                        <mat-icon>exit_to_app</mat-icon>\r\n                        <span>{{ 'aula-planeta.menu.logout' | translate }}</span>\r\n                    </button>\r\n                </mat-menu>\r\n\r\n            </mat-toolbar>\r\n        </header>\r\n\r\n        <div class=\"content\" [@routeAnimations]=\"o.isActivated && o.activatedRoute.routeConfig.data && o.activatedRoute.routeConfig.data.title\">\r\n            \r\n            <mat-sidenav-container role=\"main\">\r\n                <mat-sidenav #sidenav mode=\"side\" role=\"navigation\">\r\n                    <mat-nav-list>\r\n                        <a mat-list-item *ngFor=\"let item of navigationSideMenu\" (click)=\"sidenav.close()\" [routerLink]=\"[item.link]\" routerLinkActive=\"active\">\r\n                            {{item.label | translate}}\r\n                        </a>\r\n                    </mat-nav-list>\r\n                </mat-sidenav>\r\n\r\n                <router-outlet #o=\"outlet\"></router-outlet>\r\n            </mat-sidenav-container>\r\n\r\n            <div class=\"footer\" role=\"region\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 links\">\r\n                            <a href=\"https://twitter.com/aulaplaneta?lang=es\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <fa-icon [icon]=\"['fab','twitter']\"></fa-icon>\r\n                                <span>Twitter</span>\r\n                            </a>\r\n                            <a href=\"https://www.youtube.com/channel/UCR_vBgIJw21LQoSadb16tvA\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <fa-icon [icon]=\"['fab','youtube']\"></fa-icon>\r\n                                <span>Youtube</span>\r\n                            </a>\r\n                            <a href=\"https://www.instagram.com/aulaplaneta/?hl=es\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <fa-icon [icon]=\"['fab','instagram']\"></fa-icon>\r\n                                <span>Instagram</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 signature\">\r\n                            &#169; <span class=\"year\">{{year}}</span> Planeta\r\n                            <br class=\"d-block d-sm-none\">\r\n                            <a [matTooltip]=\"'aula-planeta.footer.changelog' | translate\" matTooltipPosition=\"before\" href=\"https://www.googles.es\">\r\n                                <fa-icon icon=\"rocket\"></fa-icon>\r\n                                {{version}} <span *ngIf=\"!isProd\">[{{envName}}]</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { MainComponent } from './features/main/main.component';\r\nimport { AuthGuardService } from './core/auth/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'examples',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./features/login/login.module').then((m) => m.LoginModule)\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainComponent,\r\n    children: [\r\n      {\r\n        path: 'settings',\r\n        loadChildren: () => import('./features/settings/settings.module').then((m) => m.SettingsModule),\r\n        canActivate: [AuthGuardService],\r\n      },\r\n      {\r\n        path: 'examples',\r\n        loadChildren: () => import('./features/examples/examples.module').then((m) => m.ExamplesModule),\r\n        canActivate: [AuthGuardService],\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  // useHash supports github.io demo page, remove in your app\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      useHash: true,\r\n      scrollPositionRestoration: 'disabled',\r\n      preloadingStrategy: PreloadAllModules\r\n    })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable, Injector, ErrorHandler } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n/** Passes HttpErrorResponse to application-wide error handler */\r\n@Injectable({ providedIn: 'root' })\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap({\r\n        error: (err: any) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            const appErrorHandler = this.injector.get(ErrorHandler);\r\n            appErrorHandler.handleError(err);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}